<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<testsuite name="All RB tests">
<testsuite name="audit tests">
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<test name="testAudit(test.xpdev.refactory.audits.AuditTest)"/>
<testsuite name="Audit tests">
<test name="testAddSkipTag1(test.xpdev.refactory.audits.AuditTest2)"/>
<test name="testDeleteSkipTag1(test.xpdev.refactory.audits.AuditTest2)"/>
<test name="testBug2187(test.xpdev.refactory.audits.AuditTest2)"/>
<test name="testBug2188(test.xpdev.refactory.audits.AuditTest2)"/>
</testsuite>
<testsuite name="Corrective actions tests">
<testsuite name="test.xpdev.refactory.audits.corrective.AddCastToFloatActionTest">
<test name="TestInExpression(test.xpdev.refactory.audits.corrective.AddCastToFloatActionTest)"/>
<test name="TestInMethod(test.xpdev.refactory.audits.corrective.AddCastToFloatActionTest)"/>
<test name="TestInNew(test.xpdev.refactory.audits.corrective.AddCastToFloatActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.AddVersionUIDActionTest">
<test name="TestAddField(test.xpdev.refactory.audits.corrective.AddVersionUIDActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.CorrectVersionUIDActionTest">
<test name="TestCorrectField(test.xpdev.refactory.audits.corrective.CorrectVersionUIDActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.CorrectFloatEqualComparisionTest">
<test name="TestCorrectComparision(test.xpdev.refactory.audits.corrective.CorrectFloatEqualComparisionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.AddDefaultConstructorTest">
<test name="Test1(test.xpdev.refactory.audits.corrective.AddDefaultConstructorTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.AddSerializableToSuperclassTest">
<test name="Test1(test.xpdev.refactory.audits.corrective.AddSerializableToSuperclassTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.InsertEmptyBlockCommentActionTest">
<test name="TestAddComments(test.xpdev.refactory.audits.corrective.InsertEmptyBlockCommentActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ChangeToEqualsActionTest">
<test name="TestStringCompare(test.xpdev.refactory.audits.corrective.ChangeToEqualsActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.CorrectModifiersOrderTest">
<test name="TestModifierOrder(test.xpdev.refactory.audits.corrective.CorrectModifiersOrderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.AddFinalModifierTest">
<test name="TestChangeModifiers(test.xpdev.refactory.audits.corrective.AddFinalModifierTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveBracketsActionTest">
<test name="TestA(test.xpdev.refactory.audits.corrective.RemoveBracketsActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.FinalizeParamsActionTest">
<test name="TestFinalizeParams(test.xpdev.refactory.audits.corrective.FinalizeParamsActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.FinalizeLocalsActionTest">
<test name="TestFinalizeLocals(test.xpdev.refactory.audits.corrective.FinalizeLocalsActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveRedundantBoxingActionTest">
<test name="TestBoxing_A(test.xpdev.refactory.audits.corrective.RemoveRedundantBoxingActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveRedundantUnboxingActionTest">
<test name="TestUnboxing_A(test.xpdev.refactory.audits.corrective.RemoveRedundantUnboxingActionTest)"/>
<test name="TestUnboxing_B(test.xpdev.refactory.audits.corrective.RemoveRedundantUnboxingActionTest)"/>
<test name="TestUnboxing_C(test.xpdev.refactory.audits.corrective.RemoveRedundantUnboxingActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ConcatEmptyStringExpressionTest">
<test name="TestConcatEmptyStringExpression(test.xpdev.refactory.audits.corrective.ConcatEmptyStringExpressionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ConcatEmptyStringExpressionTest">
<test name="TestConcatEmptyStringExpression(test.xpdev.refactory.audits.corrective.ConcatEmptyStringExpressionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ReplaceBoolEquationAssignmentTest">
<test name="TestReplaceBoolEquation(test.xpdev.refactory.audits.corrective.ReplaceBoolEquationAssignmentTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveUnusedLocalVariableTest">
<test name="TestRemoveUnusedLocalVariable(test.xpdev.refactory.audits.corrective.RemoveUnusedLocalVariableTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.DeleteFromSignatureActionTest">
<test name="TestDeleteFromSignatureAction(test.xpdev.refactory.audits.corrective.DeleteFromSignatureActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveNotUsedMemberActionTest">
<test name="TestRemoveMembers(test.xpdev.refactory.audits.corrective.RemoveNotUsedMemberActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveNotUsedTypeActionTest">
<test name="TestRemoveTypes(test.xpdev.refactory.audits.corrective.RemoveNotUsedTypeActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.CommentNotUsedMemberActionTest">
<test name="TestCommentMembers(test.xpdev.refactory.audits.corrective.CommentNotUsedMemberActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.CommentNotUsedTypeActionTest">
<test name="TestCommentTypes(test.xpdev.refactory.audits.corrective.CommentNotUsedTypeActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ForinTest">
<test name="TestDuplicateNames(test.xpdev.refactory.audits.corrective.ForinTest)"/>
<test name="TestIntArrTraversal(test.xpdev.refactory.audits.corrective.ForinTest)"/>
<test name="TestStrFieldArrTraversal(test.xpdev.refactory.audits.corrective.ForinTest)"/>
<test name="TestExternalStrFieldArrTraversal(test.xpdev.refactory.audits.corrective.ForinTest)"/>
<test name="TestForIteratorTraversalNoCast(test.xpdev.refactory.audits.corrective.ForinTest)"/>
<test name="TestWhileTraversalWithCast(test.xpdev.refactory.audits.corrective.ForinTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ApplyMinimalAccessActionTest">
<test name="Test(test.xpdev.refactory.audits.corrective.ApplyMinimalAccessActionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.ForLoopConditionOptimizeTest">
<test name="Test01(test.xpdev.refactory.audits.corrective.ForLoopConditionOptimizeTest)"/>
<test name="Test02(test.xpdev.refactory.audits.corrective.ForLoopConditionOptimizeTest)"/>
<test name="Test03(test.xpdev.refactory.audits.corrective.ForLoopConditionOptimizeTest)"/>
<test name="Test04(test.xpdev.refactory.audits.corrective.ForLoopConditionOptimizeTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.SingleAssignmentPrivateFieldTest">
<test name="TestA(test.xpdev.refactory.audits.corrective.SingleAssignmentPrivateFieldTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.RemoveRedundantThrowsTest">
<test name="TestRemoveRedundantThrows(test.xpdev.refactory.audits.corrective.RemoveRedundantThrowsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest">
<test name="test1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test0(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test0_1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test1_1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test2(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test3(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test3_1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test4(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test5(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test5_1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test6(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test6_1(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test6_2(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test6_3(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test8(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
<test name="test9(test.xpdev.refactory.audits.corrective.GenericsArgumentsAnalyzerTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.EarlyDeclarationTest">
<test name="Test2(test.xpdev.refactory.audits.corrective.EarlyDeclarationTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.audits.corrective.DuplicateStringsTest">
<test name="Test1(test.xpdev.refactory.audits.corrective.DuplicateStringsTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="Classmodel tests">
<testsuite name="BinCIType tests">
<test name="testGetAllAccessibleFields(test.xpdev.refactory.classmodel.BinCITypeTest)"/>
<test name="testGetOffsetNode(test.xpdev.refactory.classmodel.BinCITypeTest)"/>
<testsuite name="BinClass tests">
<test name="testGetDeclaredMethodsForTest(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForA(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForB(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForC(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForD(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForG(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetDeclaredMethodsForI(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
<test name="testGetConstructor(test.xpdev.refactory.classmodel.BinCITypeTest$BinClassTest)"/>
</testsuite>
<testsuite name="BinInterface tests">
<test name="testGetDeclaredMethodsForInterfaceA(test.xpdev.refactory.classmodel.BinCITypeTest$BinInterfaceTest)"/>
<test name="testGetDeclaredMethodsForInterfaceB(test.xpdev.refactory.classmodel.BinCITypeTest$BinInterfaceTest)"/>
<test name="testGetAllAccessibleMethodsForInterfaceA(test.xpdev.refactory.classmodel.BinCITypeTest$BinInterfaceTest)"/>
<test name="testGetAllAccessibleMethodsForInterfaceB(test.xpdev.refactory.classmodel.BinCITypeTest$BinInterfaceTest)"/>
</testsuite>
<testsuite name="getBodyAST">
<test name="testGetBodyASTClassTest(test.xpdev.refactory.classmodel.BinCITypeTest$GetBodyASTTest)"/>
<test name="testGetBodyASTInterfaceTestInnerInterface(test.xpdev.refactory.classmodel.BinCITypeTest$GetBodyASTTest)"/>
</testsuite>
<testsuite name="Location awareness">
<test name="testTest(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestMainAnonymousRunnable(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestMainParams(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestMainTmpLocal(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestStaticInitializer(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestInstanceInitializer(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTestInnerInterface(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTest3(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTest3Inner(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTest3InnerB(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testTest3TestA(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testHello(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testHelloA(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testHelloC(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testHelloB(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
<test name="testPointConstructor(test.xpdev.refactory.classmodel.BinCITypeTest$LocationAwareTest)"/>
</testsuite>
</testsuite>
<testsuite name="BinInitializer tests">
<testsuite name="getBodyAST">
<test name="testGetBodyASTTestMain(test.xpdev.refactory.classmodel.BinInitializerTest$GetBodyASTTest)"/>
<test name="testGetBodyASTTest3Main(test.xpdev.refactory.classmodel.BinInitializerTest$GetBodyASTTest)"/>
</testsuite>
</testsuite>
<testsuite name="TypeConversionRules tests">
<test name="testIsIdentityConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsWideningPrimitiveConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsNarrowingPrimitiveConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsWideningReferenceConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsNarrowingReferenceConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsStringConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsUnboxingConversion(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_boolean_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_boolean_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_boolean_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_boolean_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_char_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_char_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_char_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_char_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_byte_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_byte_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_byte_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_byte_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_short_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_short_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_short_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_short_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_int_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_int_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_int_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_int_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_long_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_long_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_long_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_long_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_float_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_float_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_float_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_float_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_double_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_double_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_double_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_of_double_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_WithSubtyping1(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_WithSubtyping2(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_WithSubtyping3(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
<test name="testIsBoxingConversion_WithSubtyping4(test.xpdev.refactory.classmodel.TypeConversionRulesTest)"/>
</testsuite>
<testsuite name="BinMethod tests">
<test name="testOverridesNoSuper(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesStatic(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDifferentName(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverrides(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDeepHierarchy(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesPrivate(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDefaultSamePackage(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDefaultOtherPackage(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDifferentReturnType(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDifferentParameterTypes(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesDifferentNumberOfParameters(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesInterfaceMethod(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testOverridesAbstractInterfaceMethod(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testGetTopMethodsBasic(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testGetTopMethodsDuplicates(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testGetTopMethodsComplex(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testGetTopMethodsNoTop(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testIsVariableArity(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testFindOverrides(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<test name="testGetSubMethods(test.xpdev.refactory.classmodel.BinMethodTest)"/>
<testsuite name="getBodyAST">
<test name="testGetBodyASTTestMain(test.xpdev.refactory.classmodel.BinMethodTest$GetBodyASTTest)"/>
<test name="testGetBodyASTTest3Main(test.xpdev.refactory.classmodel.BinMethodTest$GetBodyASTTest)"/>
<test name="testGetBodyASTPointConstructor(test.xpdev.refactory.classmodel.BinMethodTest$GetBodyASTTest)"/>
<test name="testGetBodyASTTest4B(test.xpdev.refactory.classmodel.BinMethodTest$GetBodyASTTest)"/>
</testsuite>
</testsuite>
<testsuite name="MethodInvocationRules tests">
<test name="testGetInvokedNoMethodFound(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testGetInvokedTypeSameType(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testGetInvokedTypeSuperclass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testGetInvokedTypeSuperinterface(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testGetInvokedTypeOuter(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsTypeAccessibleTopLevelPublic(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsTypeAccessibleTopLevelNonPublic(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsTypeAccessibleInnerType(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessibleProtectedInSuperclass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessibleDefaultSamePackage(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessibleDefaultDifferentPackage(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessiblePrivateInSuperclass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessiblePrivateInSameClass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testBug293(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsMemberAccessibleProtectedInOtherClass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testIsNotMemberAccessibleProtectedInOtherClass(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testFindSuitableMethodWhenBoxing1(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testFindSuitableMethodWhenBoxing2(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testVariableArityInvocations(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testVariableArityInvocationsWithBoxing(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testVariableArityInvocationsWithBoxingAndSubtyping(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
<test name="testVariableArityMoreSpecificResolving(test.xpdev.refactory.classmodel.MethodInvocationRulesTest)"/>
</testsuite>
<testsuite name="BinStringConcatenationExpression tests">
<test name="testTree(test.xpdev.refactory.classmodel.BinStringConcatenationExpressionTest)"/>
</testsuite>
<testsuite name="BinMethodInvocationExpression tests">
<test name="testIsApplicable(test.xpdev.refactory.classmodel.BinMethodInvocationExpressionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.classmodel.BinModifierTest">
<test name="testMask(test.xpdev.refactory.classmodel.BinModifierTest)"/>
</testsuite>
<testsuite name="BinArithmeticalExpression tests">
<test name="test_byte_byte_Expression1(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression2(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression3(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression4(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression5(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression6(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression7(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_byte_Expression8(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Byte_byte_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_byte_Byte_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Byte_Byte_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_short_short_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Short_short_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_short_Short_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Short_Short_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_short_int_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Short_int_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_short_Integer_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Short_Integer_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Long_Integer_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Float_Integer_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Double_Integer_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Integer_byte_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
<test name="test_Integer_float_Expression(test.xpdev.refactory.classmodel.BinArithmeticalExpressionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.classmodel.CompilationUnitTest">
<test name="testGuaredBlocks(test.xpdev.refactory.classmodel.CompilationUnitTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.classmodel.DuplicateInterfacesTest">
<test name="testIfDuplicateInterfacesOccur(test.xpdev.refactory.classmodel.DuplicateInterfacesTest)"/>
</testsuite>
</testsuite>
<testsuite name="Source loading">
<testsuite name="Comment tests">
<test name="testNull(test.xpdev.refactory.loader.CommentTest)"/>
<test name="testEmpty(test.xpdev.refactory.loader.CommentTest)"/>
<test name="testSingleLine(test.xpdev.refactory.loader.CommentTest)"/>
<test name="testMultiLineWindows(test.xpdev.refactory.loader.CommentTest)"/>
<test name="testMultiLineUnix(test.xpdev.refactory.loader.CommentTest)"/>
<test name="testMultiLineMac(test.xpdev.refactory.loader.CommentTest)"/>
</testsuite>
<testsuite name="SourceMethodBodyLoader tests">
<test name="testBug1222(test.xpdev.refactory.loader.SourceMethodBodyLoaderTest)"/>
<test name="testBug1249(test.xpdev.refactory.loader.SourceMethodBodyLoaderTest)"/>
</testsuite>
<testsuite name="Source loading">
<testsuite name="Special source reloading">
<test name="testAnnotationLoadingFromClassFiles(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testBug71(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testReload(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testLastRebuildTime(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testRebuildBinaryClasses(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testRebuildLocalsOfLocals(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testClearingOfLocalOfLocalOnIncrementalRebuild(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testBug2021(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testBug1733(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testBug2057(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testBugRIM708(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testGetArrayInterfaces_normal(test.xpdev.refactory.loader.ProjectTest)"/>
<test name="testGetArrayInterfaces_noInterfaces(test.xpdev.refactory.loader.ProjectTest)"/>
</testsuite>
</testsuite>
<testsuite name="Source loading via Project">
<test name="Project &quot;bingo-example&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;GenericsLoadBinary&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;generics_in_return_type&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;SuperMemberInvocationInTooDeepInner&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RebuildBinaryClasses&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RebuildLocalsOfLocals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;IncrementalRebuildLocalsOfLocals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;IsLocalTypeAccessibleBug1&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;IsLocalTypeAccessibleBug2&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NumericLiterals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CharLiterals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;FIXME Scanner&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;FIXME Scanner Multiple Packages&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;FIXME Timestamp&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;BinMethod.getDeclaredMethods&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;BinStringConcatenationExpression&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;LocationAware&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;getAllAccessibleFields&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;PackageModel initialization&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CompoundAST&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;DependenciesIndexer&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractSuperDialog_DependencyCheck&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;SimpleProject&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NbCvs&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bookstore2&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bingo example&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Simple Project&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CallTree bug2060&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;FruitStore&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #2213&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #2209&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #2175&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Duplicate_Interfaces&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RenameLocal_several_on_same_line_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RenameLocal_several_on_same_line_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RenameLocal_same_name_in_different_scope_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RenameLocal_same_name_in_different_scope_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RenameLocal_same_name_in_accessible_scope&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;dir_rename_prefix_two_sourceroots_before&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;dir_rename_prefix_two_sourceroots_after&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #1161 initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #1161 expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_same_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_same_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_main_wrong_dir_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_main_wrong_dir_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_wrong_sourcepath_root_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_paths_in_non_java_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_paths_in_non_java_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_wrong_sourcepath_root_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_with_javadoc_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_imports_placing_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_imports_placing_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_extract_with_javadoc_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_StaticImports_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_StaticImports_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate1_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate1_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate2_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate2_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate3_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate3_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate4_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Relocate4_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Issue251_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Issue251_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Issue245_initial&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;MoveType_Issue245_expected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #1222&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bug #1628&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bug #2057&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ErrorMessagesForReadOnlyFiles_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ErrorMessagesForReadOnlyFiles_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark1_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark1_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark2_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark2_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark3_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark3_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark4_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark4_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark5_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Benchmark5_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExtractExpression1_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExtractExpression1_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Issue238&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_620_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_620_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1317_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1317_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1401_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1401_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1402_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1402_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1450_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1450_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1529&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1529_inside_expression&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1529_inside_method_call&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1619_StringLiteral&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1619_CharLiteral&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1619_BothLiterals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1581_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1581_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1606_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1606_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1607_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1607_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1634&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1634_2&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1667_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1667_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1787_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1787_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1871_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1871_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1904_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1904_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1938_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug1938_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug2016_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug2016_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug2139&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug2255_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_Bug2255_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_InnerClassesInGenerics_in_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_InnerClassesInGenerics_out_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_VarInLoop_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_VarInLoop_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_VarInLoopReturn_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_VarInLoopReturn_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExceptionByNew_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExceptionByNew_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_FqnUsage_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_FqnUsage_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ParamRename_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ParamRename_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_TypeParams1_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_TypeParams1_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExtractInAnonymous_in&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;ExtractMethod_ExtractInAnonymous_out&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #154&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #155&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/used_inside_only&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #1364&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #1605&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;implementation_search&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/testUnusedSubclassA&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/testUnusedSubclassB&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/two_branches&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/used_inside_only2&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/new&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/bug1695&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/ExcludePublicAndProtected&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/UseOfUSEDTag1&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed/UseOfUSEDTag2&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed_invocation_in_subclass&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;NotUsed_used_private_constructor&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #96&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #105&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #106&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #107&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #121&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #124 and #125&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #127&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #130&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #142&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #143&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #151&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #156&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bug #179&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;bug #181&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bugs #211 and #212&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #213&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #256&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #257&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #258&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #259&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Bug #262 &amp; #263&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed bug1686&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed bug1941&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed bug1957&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Owner's method used in inner class&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Owner's field used in inner class&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed_another_branch&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed_method_invocations&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Where Used for fields&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Invocation in private method of super&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Invocation of interface method in private method of sub&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Not invocation of implementation method in private method of sub&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Usage on casted null&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed type usage&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed type cast&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed sub super&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed parameter&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;WhereUsed multi selection&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Wildcards bug&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Loop labels&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Number Of Types&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Cyclic Dependency&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Cyclomatic Complexity&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Executable Statements&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Lines of Code&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;RFC Metric&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Number Of Children&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Stability Metrics&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Abstractness Metric&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_SingleAssignmentFinal&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_LawOfDemeter&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_Shading&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_RedundantUnboxing&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_RedundantBoxing&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_FinalLocalProposal&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_FinalMethodProposal&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_NumericLiterals&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_ConstantFieldProposal&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_ModifierOrder&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_ParameterOrder&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_StringEqualComparision&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_MethodCallsMethod&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_MethodBodyLength&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_EqualsOnDiffTypes&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_NotSerializableSuper&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_SerialVersionUID&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_IntDivFloatContext&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_EmptyBlocksAndBodies&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_LoopCondition&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_StringConcatOrder&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_StringEqualsOrder&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_PossibleLostOverride&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_PossibleCallNPE&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;StaticFieldAccessors&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;LoopCondModification&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_UnusedLocalVariable&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_FloatEqualComparision&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_AbortedFinally&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_BooleanLiteralComparison&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_DangerousCatch&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_EmptyStatement&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_EqualsHashcode&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_ParameterAssignment&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_RedundantCast&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_RedundantInstanceof&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_SelfAssignment&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_MissingBlock&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_NonStaticReference&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_StringToString&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_SwitchMissingDefault&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_DebugCode&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_UnusedAssignment&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_StaticMethodProposal&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_RedundantThrows&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_NestedBlock&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_SwitchCaseFallthrough&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_Forin&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_MinimizeAccess&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_ForLoopConditionOptimizer&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_DangerousIterator&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_EarlyDeclaration&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_NullParameters&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;Audit_DuplicateStrings&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="Jacks compiler tests">
<testsuite name="jacks">
<testsuite name="jls">
<testsuite name="arrays">
<testsuite name="array-initializers">
<test name="Project &quot;10.6-syntax-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-syntax-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-syntax-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-syntax-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-syntax-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-syntax-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-type-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-type-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;10.6-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="blocks-and-statements">
<testsuite name="break-statement">
<test name="Project &quot;14.14-label-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-label-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-plain-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.14-try-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="continue-statement">
<test name="Project &quot;14.15-label-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-label-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-label-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-label-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-label-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-label-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-plain-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-try-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.15-try-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="labeled-statements">
<test name="Project &quot;14.7-enclosed-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-enclosed-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-same-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-scope-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.7-shadow-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="local-class-declarations">
<test name="Project &quot;14.3-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="local-variable-declaration-statements">
<testsuite name="scope">
<test name="Project &quot;14.4.2-shadow-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-shadow-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.4.2-valid-scope-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="switch-statement">
<test name="Project &quot;14.10-abrupt-completion-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-assignable-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-example-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-exhaustion-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-exhaustion-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-switchlabel-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-switchlabel-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.10-valid-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="synchonized-statement">
<test name="Project &quot;14.18-expression-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.18-expression-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.18-expression-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.18-lock-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.18-lock-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.18-lock-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="try-statement">
<test name="Project &quot;14.19-shadow-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.19-shadow-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="unreachable-statements">
<test name="Project &quot;14.20-block-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-block-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-block-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-19.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-21.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-catch-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-do-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-do-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-do-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-do-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-empty-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-expression-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-expression-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-for-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-for-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-if-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-if-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-if-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-if-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-label-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-label-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-label-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-local-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-local-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-switch-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-synchronized-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-try-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-try-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-try-25.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-try-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-try-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-while-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-while-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;14.20-while-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="classes">
<testsuite name="class-declaration">
<testsuite name="class-modifiers">
<test name="Project &quot;8.1.1-valid-modifier-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1-valid-modifier-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1-valid-modifier-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1-valid-modifier-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="abstract-classes">
<test name="Project &quot;8.1.1.1-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1.1-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1.1-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1.1-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1.1-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.1.1.1-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="inner-classes-and-enclosing-instances">
<test name="Project &quot;8.1.2-static-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="class-members">
<test name="Project &quot;8.2-accessibility-inherited-member-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.2-accessibility-inherited-member-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.2-accessibility-inherited-member-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.2-accessibility-inherited-member-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.2-accessibility-inherited-member-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.2-accessibility-inherited-member-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="constructor-declarations">
<test name="Project &quot;8.8-example-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8-simpletypename-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="constructor-body">
<test name="Project &quot;8.8.5-example-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5-return-statement-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="explicit-constructor-invocations">
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-args-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-args-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-args-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-args-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-explicit-super-invocation-args-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-implicit-super-invocation-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-implicit-super-invocation-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-accessible-implicit-super-invocation-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-alternate-constructor-invocation-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-alternate-constructor-invocation-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-before-block-statements-super-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-before-block-statements-this-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-qualified-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-qualified-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-qualified-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-qualified-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.5.1-qualified-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="constructor-modifiers">
<test name="Project &quot;8.8.3-modifiers-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.3-modifiers-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.3-modifiers-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="constructor-overloading">
<test name="Project &quot;8.8.6-overloaded-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="constructor-signature">
<test name="Project &quot;8.8.2-signature-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="default-constructor">
<test name="Project &quot;8.8.7-accessible-default-constructor-inner-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.7-accessible-default-constructor-inner-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.7-accessible-default-constructor-inner-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.7-default-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.7-default-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="formal-parameters">
<test name="Project &quot;8.8.1-formal-parameters-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.1-formal-parameters-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.1-formal-parameters-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.1-formal-parameters-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.1-formal-parameters-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.8.1-formal-parameters-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="field-declarations">
<testsuite name="initialization-of-fields">
<testsuite name="restrictions">
<test name="Project &quot;8.3.2.3-legal-forward-instance-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-instance-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-interface-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-interface-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.3.2.3-legal-forward-static-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="member-type-declarations">
<testsuite name="access-modifiers">
<test name="Project &quot;8.5.1-valid-modifier-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.1-valid-modifier-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.1-valid-modifier-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.1-valid-modifier-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.1-valid-modifier-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="static-member-type-declarations">
<test name="Project &quot;8.5.2-accessible-inherited-non-static-member-usage-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-accessible-inherited-non-static-member-usage-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-accessible-static-member-usage-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-accessible-static-member-usage-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-inherited-non-static-member-usage-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-inherited-non-static-member-usage-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-static-member-usage-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.5.2-static-member-usage-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="method-declarations">
<testsuite name="method-body">
<test name="Project &quot;8.4.5-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.5-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.5-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.5-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.5-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="method-modifiers">
<test name="Project &quot;8.4.3-abstract-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-abstract-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-abstract-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-access-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-access-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-access-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-access-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-big-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-big-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-final-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-native-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-native-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-native-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-native-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-static-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-strictfp-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-strictfp-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-strictfp-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-strictfp-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;8.4.3-synchronized-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="conversions-and-promotions">
<testsuite name="assignment-conversion">
<test name="Project &quot;5.2-boolean-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-narrowing-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-widening-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-widening-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-byte-widening-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-narrowing-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-narrowing-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-widening-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-char-widening-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-double-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-float-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-float-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-narrowing-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-narrowing-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-narrowing-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-int-widening-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-long-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-long-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-long-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-reference-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-reference-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-reference-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-identity-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-narrowing-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-narrowing-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-widening-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-widening-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-widening-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.2-short-widening-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="kinds-of-conversion">
<testsuite name="identity-conversions">
<test name="Project &quot;5.1.1-primitive-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-primitive-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-reference-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-reference-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-reference-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-reference-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.1-reference-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="narrowing-primitive-conversions">
<test name="Project &quot;5.1.3-dtf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-dtf-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-nan-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-nan-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-nan-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-nan-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.3-nan-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="widening-primitive-conversions">
<test name="Project &quot;5.1.2-btd-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btd-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btd-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btd-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btd-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bti-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bti-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bti-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bti-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bti-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btl-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btl-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btl-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btl-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-btl-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bts-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bts-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bts-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bts-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-bts-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctd-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctf-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-cti-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ctl-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ftd-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itd-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itd-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itd-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itd-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itd-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itf-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itl-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itl-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itl-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itl-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-itl-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltd-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-ltf-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-std-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-std-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-std-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-std-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-std-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stf-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stf-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stf-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stf-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stf-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-sti-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-sti-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-sti-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-sti-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-sti-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stl-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stl-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stl-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stl-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;5.1.2-stl-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="definite-assignment">
<testsuite name="constructors-and-instance-initializers">
<test name="Project &quot;16.8-constructor-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.8-constructor-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="expressions">
<testsuite name="assignment-expressions">
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-assignment-pass-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-compound-definite-unassignment-pass-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-assignment-pass-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.7-simple-definite-unassignment-pass-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="boolean-conditional-and">
<test name="Project &quot;16.1.2-definite-assignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="boolean-conditional-operator">
<test name="Project &quot;16.1.5-definite-assignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-17.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-18.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-19.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-20.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-21.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-22.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-23.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-24.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-25.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-26.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-27.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-28.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-29.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-30.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-31.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-32.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-33.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-34.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-35.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-36.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.5-definite-assignment-pass-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="boolean-conditional-or">
<test name="Project &quot;16.1.2-definite-assignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-assignment-pass-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.1.2-definite-unassignment-pass-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="statements">
<testsuite name="if-statements">
<test name="Project &quot;16.2.7-final-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.7-scope-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.7-scope-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="switch-statements">
<test name="Project &quot;16.2.8-final-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.8-final-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.8-final-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.8-final-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.8-unassigned-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;16.2.8-unassigned-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="expressions">
<testsuite name="additive-operators">
<testsuite name="numeric-types">
<test name="Project &quot;15.18.2-assoc-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-assoc-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-commute-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-commute-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-commute-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-commute-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.2-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="string-concatenation-operator">
<test name="Project &quot;15.18.1-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.18.1-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="array-access-expressions">
<test name="Project &quot;15.13-anon-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="array-creation-expressions">
<test name="Project &quot;15.10-initializer-syntax-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-syntax-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-syntax-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-syntax-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-syntax-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-syntax-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-type-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-type-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.10-initializer-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="assignment-operators">
<testsuite name="compound-assignment-operators">
<test name="Project &quot;15.26.2-add-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-add-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-add-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-add-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-and-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-and-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-and-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-zero-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-zero-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-div-zero-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-left-shift-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-left-shift-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-left-shift-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-zero-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-zero-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mod-zero-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mult-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mult-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-mult-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-or-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-or-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-or-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-signed-right-shift-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-signed-right-shift-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-signed-right-shift-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-string-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-sub-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-sub-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-sub-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-unsigned-right-shift-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-unsigned-right-shift-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-unsigned-right-shift-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-xor-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-xor-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.26.2-xor-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="class-instance-creation">
<test name="Project &quot;15.9-unqualified-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9-unqualified-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="anonymous-class-declarations">
<testsuite name="anonymous-constructors">
<test name="Project &quot;15.9.5.1-exception-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-exception-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-exception-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-exception-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-superconstructor-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-superconstructor-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.5.1-superconstructor-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="determining-the-class">
<test name="Project &quot;15.9.1-qualified-anonymous-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-17.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-anonymous-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-qualified-concrete-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-18.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-19.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-22.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-24.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-anonymous-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.9.1-unqualified-concrete-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="conditional-operator">
<test name="Project &quot;15.25-basic-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-basic-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-byte-operand-type-mismatch-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-byte-operand-type-mismatch-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-byte-operand-type-mismatch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-byte-operand-type-mismatch-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-char-operand-type-mismatch-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-char-operand-type-mismatch-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-char-operand-type-mismatch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-char-operand-type-mismatch-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-mismatch-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-mismatch-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-mismatch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-operand-type-mismatch-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-short-operand-type-mismatch-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-short-operand-type-mismatch-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-short-operand-type-mismatch-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-short-operand-type-mismatch-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.25-short-operand-type-mismatch-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="constant-expression">
<test name="Project &quot;15.28-cast-simple-name-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-cast-simple-name-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-cast-simple-name-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-example-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-example-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-primitive-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-qualified-name-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-qualified-namestr-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-name-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-namestr-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-namestr-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-namestr-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-simple-namestr-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-17.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.28-string-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="method-invocation-expressions">
<testsuite name="determine-method-signature">
<testsuite name="applicable-and-accessible">
<test name="Project &quot;15.12.2.1-accessibility-constructor-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.12.2.1-accessibility-constructor-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.12.2.1-accessibility-method-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="multiplicative-operators">
<test name="Project &quot;15.17-div-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-div-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-div-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-div-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mod-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mod-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mod-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mod-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mult-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mult-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mult-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-mult-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-18.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="division-operator">
<test name="Project &quot;15.17.2-assoc-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-assoc-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-int-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-long-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.2-long-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="multiplication-operator">
<test name="Project &quot;15.17.1-assoc-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-assoc-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-commute-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-commute-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-commute-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-commute-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-int-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-long-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.1-long-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="remainder-operator">
<test name="Project &quot;15.17.3-assoc-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-assoc-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-int-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-int-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-long-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-long-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.17.3-long-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="postfix-expressions">
<testsuite name="postfix-decrement-operator">
<test name="Project &quot;15.14.2-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.2-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="postfix-increment-operator">
<test name="Project &quot;15.14.1-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.14.1-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="primary-expressions">
<testsuite name="class-literals">
<test name="Project &quot;15.8.2-primary-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-syntax-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.8.2-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="unary-operators">
<test name="Project &quot;15.15-group-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15-precedence-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15-precedence-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15-precedence-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15-precedence-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<testsuite name="bitwise-complement-operator">
<test name="Project &quot;15.15.5-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-int-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-long-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-long-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-type-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.5-type-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="logical-complement-operator">
<test name="Project &quot;15.15.6-boolean-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.6-boolean-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="prefix-decrement-operator">
<test name="Project &quot;15.15.2-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.2-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="prefix-increment-operator">
<test name="Project &quot;15.15.1-type-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.1-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="unary-minus-operator">
<test name="Project &quot;15.15.4-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-int-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-int-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-int-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-long-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-long-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-long-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.4-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="unary-plus-operator">
<test name="Project &quot;15.15.3-type-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;15.15.3-type-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="interfaces">
<testsuite name="interface-declarations">
<testsuite name="interface-modifiers">
<test name="Project &quot;9.1.1-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="lexical-structure">
<testsuite name="comments">
<test name="Project &quot;3.7-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-17.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-18.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-19.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-20.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-21.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-22.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-23.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-24.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.7-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="identifiers">
<test name="Project &quot;3.8-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.8-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.8-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.8-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.8-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="input-elements-and-tokens">
<test name="Project &quot;3.5-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.5-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="keywords">
<test name="Project &quot;3.9-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-17.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-18.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-19.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-20.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-21.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-22.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-23.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-24.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-25.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-26.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-27.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-28.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-29.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.9-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="lexical-translations">
<test name="Project &quot;3.2-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.2-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="line-terminators">
<test name="Project &quot;3.4-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.4-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.4-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.4-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.4-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.4-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="literals">
<testsuite name="character-literals">
<test name="Project &quot;3.10.4-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.4-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="escape-sequences">
<test name="Project &quot;3.10.7-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-15.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-16.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.7-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="floating-point-literals">
<test name="Project &quot;3.10.2-double-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-double-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.2-float-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="integer-literals">
<test name="Project &quot;3.10.1-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.1-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="string-literals">
<test name="Project &quot;3.10.5-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.10.5-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="unicode-escapes">
<test name="Project &quot;3.3-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.3-valid-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.3-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.3-valid-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="white-space">
<test name="Project &quot;3.6-valid-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.6-valid-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.6-valid-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.6-valid-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.6-valid-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;3.6-valid-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="names">
<testsuite name="access-control">
<testsuite name="determining-accessibility">
<test name="Project &quot;6.6.1-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.6.1-14.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.6.1-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.6.1-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.6.1-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.6.1-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="members-and-inheritance">
<testsuite name="members-of-a-class-type">
<test name="Project &quot;6.4.2-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="members-of-an-array-type">
<test name="Project &quot;6.4.4-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.4.4-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="members-of-an-interface-type">
<test name="Project &quot;6.4.3-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="scope-of-a-declaration">
<test name="Project &quot;6.3-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.3-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;6.3-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="packages">
<testsuite name="compilation-units">
<test name="Project &quot;7.3-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.3-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="import-declarations">
<testsuite name="single-type-import-declaration">
<test name="Project &quot;7.5.1-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="package-declarations">
<testsuite name="named-packages">
<test name="Project &quot;7.4.1-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="unnamed-packages">
<test name="Project &quot;7.4.2-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.4.2-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="top-level-type-declarations">
<test name="Project &quot;7.6-name-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-name-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-name-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-optional-restrictions-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-scope-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-scope-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-syntax-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-syntax-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;7.6-syntax-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="types-values-and-variables">
<testsuite name="variables">
<testsuite name="final-variables">
<test name="Project &quot;4.5.4-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;4.5.4-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;4.5.4-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;4.5.4-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;4.5.4-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="non-jls">
<testsuite name="argument-expansion">
<test name="Project &quot;non-jls-argument-expansion-10.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-11.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-12.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-13.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-7.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-8.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-9.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-tokens-2.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-tokens-4.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-argument-expansion-tokens-5.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="encoding">
<test name="Project &quot;non-jls-encoding-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-encoding-3.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;non-jls-encoding-6.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="random-crashers">
<test name="Project &quot;non-jls-random-crashers-1.test&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.ParsingErrorsTest">
<test name="testWhereUsedWhenANonUserClassHasAMissingSuperclass(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testWhereUsedWhenANonUserClassHasBadMethodReturnTypes(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testWhereUsedWhenATheUsedClassHasABadMethodSignature(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testWhereUsedWithTokenErrors(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testConstructorNamedAfterWrongClass(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testAbstractMethodMustNotHaveBody(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
<test name="testJavaReckognizerErrors(test.xpdev.refactory.loader.ParsingErrorsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.LocalTypeTests">
<test name="testFail1(test.xpdev.refactory.loader.LocalTypeTests)"/>
<test name="testFail2(test.xpdev.refactory.loader.LocalTypeTests)"/>
<test name="testFail3(test.xpdev.refactory.loader.LocalTypeTests)"/>
<test name="testFail4(test.xpdev.refactory.loader.LocalTypeTests)"/>
<test name="testFail5(test.xpdev.refactory.loader.LocalTypeTests)"/>
<test name="testWork1(test.xpdev.refactory.loader.LocalTypeTests)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.RebuildTest">
<test name="testInterruptLoad(test.xpdev.refactory.loader.RebuildTest)"/>
<test name="testCleanRebuild(test.xpdev.refactory.loader.RebuildTest)"/>
<test name="testRebuild(test.xpdev.refactory.loader.RebuildTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.RebuildTestWithCustomProjects">
<test name="testClasspathUpdate(test.xpdev.refactory.loader.RebuildTestWithCustomProjects)"/>
<test name="testRebuildAfterCriticalErrors(test.xpdev.refactory.loader.RebuildTestWithCustomProjects)"/>
<test name="testClasspathReleaseOnRebuild(test.xpdev.refactory.loader.RebuildTestWithCustomProjects)"/>
<test name="testDiscoverAllUsedTypesReleasesClasspath(test.xpdev.refactory.loader.RebuildTestWithCustomProjects)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.CacheTest">
<test name="testJSPCacheLoading(test.xpdev.refactory.loader.CacheTest)"/>
<test name="testRemoveJSPCache(test.xpdev.refactory.loader.CacheTest)"/>
<test name="testRemoveJavaCache(test.xpdev.refactory.loader.CacheTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.RebuildArrayTypesTest">
<test name="testIncrementalRebuild(test.xpdev.refactory.loader.RebuildArrayTypesTest)"/>
</testsuite>
<testsuite name="Jdk50 compiler tests">
<testsuite name="Imported from NB4">
<testsuite name="jdk15">
<testsuite name="AnnotationTest">
<testsuite name="testAddAnnWithConstr">
<test name="Project &quot;AnnotationTest/testAddAnnWithConstr/AnnotationClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;AnnotationTest/testAddAnnWithConstr/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAddAnnWithField">
<test name="Project &quot;AnnotationTest/testAddAnnWithField/AnnotationClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;AnnotationTest/testAddAnnWithField/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAddAnnotation">
<test name="Project &quot;AnnotationTest/testAddAnnotation/AnnotationClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;AnnotationTest/testAddAnnotation/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="AnnotationTypeTest">
<testsuite name="testAddAttribute">
<test name="Project &quot;AnnotationTypeTest/testAddAttribute/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAttributeDefaultValue2Change">
<test name="Project &quot;AnnotationTypeTest/testAttributeDefaultValue2Change/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAttributeDefaultValue3Change">
<test name="Project &quot;AnnotationTypeTest/testAttributeDefaultValue3Change/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAttributeDefaultValueChange">
<test name="Project &quot;AnnotationTypeTest/testAttributeDefaultValueChange/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAttributeNameChange">
<test name="Project &quot;AnnotationTypeTest/testAttributeNameChange/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAttributeTypeChange">
<test name="Project &quot;AnnotationTypeTest/testAttributeTypeChange/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testRemoveAttribute">
<test name="Project &quot;AnnotationTypeTest/testRemoveAttribute/AnnotationType.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="AnonClassTest">
<testsuite name="test1">
<test name="Project &quot;AnonClassTest/test1/AnonClassTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test2">
<test name="Project &quot;AnonClassTest/test2/AnonClassTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="CC15Tests">
<testsuite name="arraystest">
<test name="Project &quot;CC15Tests/arraystest/Test.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="ctorstest">
<test name="Project &quot;CC15Tests/ctorstest/Test.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="genericstest">
<test name="Project &quot;CC15Tests/genericstest/MyGenericClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/genericstest/MyGenericInterface.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/genericstest/MyGenericsTest.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/genericstest/MyGenericsTesti.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/genericstest/MyGenericsTestii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test12">
<test name="Project &quot;CC15Tests/test12/CCTest12.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test12/CCTest12i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test12/CCTest12ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test12/CCTest12iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test12/CCTest12iv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test12/CCTest12v.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test13">
<test name="Project &quot;CC15Tests/test13/CCTest13.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/CCTest13i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/CCTest13ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/CCTest13iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/CCTest13iv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/CCTest13v.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test13/List.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test14">
<test name="Project &quot;CC15Tests/test14/CCTest14.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/CCTest14i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/CCTest14ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/CCTest14iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/CCTest14iv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/CCTest14v.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test14/List.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test2">
<test name="Project &quot;CC15Tests/test2/CCTest2.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test2/CCTest2i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test2/CCTest2ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test2/CCTest2iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test2/CCTest2iv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test2/CCTest2v.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test3">
<test name="Project &quot;CC15Tests/test3/CCTest3.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test3/CCTest3i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test6">
<test name="Project &quot;CC15Tests/test6/CCTest6.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test6/CCTest6b.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test6/CCTest6i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test6/CCTest6ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test6/CCTest6iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test6/CCTest6iv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test7">
<test name="Project &quot;CC15Tests/test7/CCTest7a.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7ai.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7aii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7aiii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7aiv.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7av.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7avi.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7b.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7bi.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test7/CCTest7bii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test8">
<test name="Project &quot;CC15Tests/test8/CCTest8.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test8/CCTest8i.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test8/CCTest8ii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test8/CCTest8iii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="test9">
<test name="Project &quot;CC15Tests/test9/CCTest9a.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test9/CCTest9b.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test9/CCTest9bi.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test9/CCTest9bii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test9/CCTest9biii.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;CC15Tests/test9/CCTest9c.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="EnumFacilityTest">
<testsuite name="testAddConst">
<test name="Project &quot;EnumFacilityTest/testAddConst/EnumFacilityName.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testReorder">
<test name="Project &quot;EnumFacilityTest/testReorder/EnumFacilityName.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="EnumTest">
<testsuite name="test1">
<test name="Project &quot;EnumTest/test1/EnumTest.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAddConstantToEmptyEnum">
<test name="Project &quot;EnumTest/testAddConstantToEmptyEnum/EnumTest.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testNewEmptyEnum">
<test name="Project &quot;EnumTest/testNewEmptyEnum/EnumTest.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testNewEnum">
<test name="Project &quot;EnumTest/testNewEnum/EnumTest.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="FieldTest1">
<testsuite name="testFieldChangeInInitValue">
<test name="Project &quot;FieldTest1/testFieldChangeInInitValue/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldInitialValue">
<test name="Project &quot;FieldTest1/testFieldInitialValue/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldInitialValueRemoval">
<test name="Project &quot;FieldTest1/testFieldInitialValueRemoval/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldInitialValueText">
<test name="Project &quot;FieldTest1/testFieldInitialValueText/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldModifiers">
<test name="Project &quot;FieldTest1/testFieldModifiers/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldName">
<test name="Project &quot;FieldTest1/testFieldName/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testFieldType">
<test name="Project &quot;FieldTest1/testFieldType/FieldTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="FieldTest2">
<test name="Project &quot;FieldTest2/FieldTest2.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="FieldTest3">
<testsuite name="testGroupInitValues">
<test name="Project &quot;FieldTest3/testGroupInitValues/FieldTest3.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testGroupSeparation">
<test name="Project &quot;FieldTest3/testGroupSeparation/FieldTest3.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="ForEachTest1">
<testsuite name="testForCreation">
<test name="Project &quot;ForEachTest1/testForCreation/ForEachTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="FormatterTest">
<test name="Project &quot;FormatterTest/FormattedClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="GenericsTest">
<test name="Project &quot;GenericsTest/ClassA.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;GenericsTest/GenericMethod.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;GenericsTest/Generics.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
<test name="Project &quot;GenericsTest/Mappp.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="GroupTest">
<test name="Project &quot;GroupTest/GroupTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="GroupTest2">
<testsuite name="testGroupCreation">
<test name="Project &quot;GroupTest2/testGroupCreation/GroupTest2Class.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testGroupSplit1">
<test name="Project &quot;GroupTest2/testGroupSplit1/GroupTest2Class.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testGroupSplit2">
<test name="Project &quot;GroupTest2/testGroupSplit2/GroupTest2Class.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="JavaDocTest">
<testsuite name="testAddJavaDocText">
<test name="Project &quot;JavaDocTest/testAddJavaDocText/JavaDocTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testAddJavaDocText2">
<test name="Project &quot;JavaDocTest/testAddJavaDocText2/JavaDocTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testChangeJavaDocText">
<test name="Project &quot;JavaDocTest/testChangeJavaDocText/JavaDocTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testRemoveJavaDocText">
<test name="Project &quot;JavaDocTest/testRemoveJavaDocText/JavaDocTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="MethodTest1">
<testsuite name="testMethodBody">
<test name="Project &quot;MethodTest1/testMethodBody/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodModifiers">
<test name="Project &quot;MethodTest1/testMethodModifiers/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodName">
<test name="Project &quot;MethodTest1/testMethodName/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodParameterChange">
<test name="Project &quot;MethodTest1/testMethodParameterChange/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodParameters">
<test name="Project &quot;MethodTest1/testMethodParameters/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodReturnType">
<test name="Project &quot;MethodTest1/testMethodReturnType/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testMethodThrows">
<test name="Project &quot;MethodTest1/testMethodThrows/MethodTest1.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="ParametersTest">
<testsuite name="testAddChng">
<test name="Project &quot;ParametersTest/testAddChng/ParametersTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testCreation">
<test name="Project &quot;ParametersTest/testCreation/ParametersTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testSwapTypeChng">
<test name="Project &quot;ParametersTest/testSwapTypeChng/ParametersTestClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="StaticImportTest">
<testsuite name="testCreation">
<test name="Project &quot;StaticImportTest/testCreation/StaticImport.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testCreation2">
<test name="Project &quot;StaticImportTest/testCreation2/StaticImport.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testSetStatic">
<test name="Project &quot;StaticImportTest/testSetStatic/StaticImport.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="VarArgsTest">
<testsuite name="testCreation">
<test name="Project &quot;VarArgsTest/testCreation/VarArgsClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testParAdd">
<test name="Project &quot;VarArgsTest/testParAdd/VarArgsClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
<testsuite name="testParChange">
<test name="Project &quot;VarArgsTest/testParChange/VarArgsClass.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="PushDown Generics Eclipse tests">
<testsuite name="PushDownTests">
<testsuite name="testGenerics0">
<testsuite name="in">
<test name="Project &quot;testGenerics0/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics1">
<testsuite name="in">
<test name="Project &quot;testGenerics1/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics10">
<testsuite name="in">
<test name="Project &quot;testGenerics10/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics11">
<testsuite name="in">
<test name="Project &quot;testGenerics11/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics12">
<testsuite name="in">
<test name="Project &quot;testGenerics12/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics13">
<testsuite name="in">
<test name="Project &quot;testGenerics13/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics14">
<testsuite name="in">
<test name="Project &quot;testGenerics14/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics15">
<testsuite name="in">
<test name="Project &quot;testGenerics15/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics16">
<testsuite name="in">
<test name="Project &quot;testGenerics16/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics17">
<testsuite name="in">
<test name="Project &quot;testGenerics17/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics18">
<testsuite name="in">
<test name="Project &quot;testGenerics18/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics19">
<testsuite name="in">
<test name="Project &quot;testGenerics19/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics2">
<testsuite name="in">
<test name="Project &quot;testGenerics2/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics3">
<testsuite name="in">
<test name="Project &quot;testGenerics3/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics4">
<testsuite name="in">
<test name="Project &quot;testGenerics4/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics5">
<testsuite name="in">
<test name="Project &quot;testGenerics5/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics6">
<testsuite name="in">
<test name="Project &quot;testGenerics6/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics7">
<testsuite name="in">
<test name="Project &quot;testGenerics7/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics8">
<testsuite name="in">
<test name="Project &quot;testGenerics8/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
<testsuite name="testGenerics9">
<testsuite name="in">
<test name="Project &quot;testGenerics9/in/A.java&quot; loading test(test.xpdev.refactory.loader.ProjectLoadTest)"/>
</testsuite>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.AssertionTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.AssertionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.AnnotationTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test029(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test030(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test031(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test032(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test033(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test034(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test035(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test036(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test037(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test038(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test039(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test040(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test041(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test042(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test043(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test044(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test045(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test046(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test047(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test048(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test049(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test050(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test051(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test052(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test053(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test054(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test055(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test056(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test057(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test058(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test059(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test060(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test061(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test062(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test063(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test064(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test065(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test066(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test067(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test068(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test069(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test070(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test071(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test072(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test073(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test074(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test075(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test076(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test077(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test078(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test079(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test080(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test081(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test082(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test083(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test084(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test085(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test086(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test087(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test088(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test089(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test090(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test091(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test092(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test093(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test094(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test095(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test096(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test097(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test098(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test099(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test100(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test101(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test102(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test103(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test104(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test105(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test106(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test107(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test108(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test109(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test110(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="test111(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
<test name="testRefactoringsOnAnnotations(test.xpdev.refactory.loader.jdk5.AnnotationTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.Compliance_1_5">
<test name="test001(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test029(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test030(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test031(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test032(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test033(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test034(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test035(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test036(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test037(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test038(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test039(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test040(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test041(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test042(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test044(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test045(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test046(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test047(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test048(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test049(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test050(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test051(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test052(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test053(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test054(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test055(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test062(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test063(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test064(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test065(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test066(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test067(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test068(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test069(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test070(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test071(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test072(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test073(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test074(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test075(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test076(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test077(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test078(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test079(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test080(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test081(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test082(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test083(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test084(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test085(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test086(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test087(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test088(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test089(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test090(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test091(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test092(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test093(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test094(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test095(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test096(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test097(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test098(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
<test name="test099(test.xpdev.refactory.loader.jdk5.Compliance_1_5)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.ForeachStatementTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.ForeachStatementTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.GenericTypeSignatureTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.GenericTypeTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test029(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test030(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test031(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test032(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test033(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test034(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test035(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test036(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test037(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test038(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test039(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test040(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test041(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test042(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test043(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test044(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test045(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test046(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test047(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test048(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test049(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test050(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test051(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test052(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test053(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test054(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test055(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test056(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test057(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test058(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test059(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test060(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test061(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test062(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test063(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test064(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test065(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test066(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test067(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test068(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test069(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test070(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test071(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test072(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test073(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test074(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test075(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test076(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test077(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test078(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test079(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test080(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test081(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test082(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test083(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test084(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test085(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test086(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test087(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test088(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test089(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test090(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test091(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test092(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test093(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test094(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test095(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test096(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test097(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test098(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test099(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test100(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test101(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test102(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test103(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test104(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test105(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test106(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test107(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test108(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test109(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test110(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test111(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test112(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test113(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test114(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test115(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test116(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test117(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test118(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test119(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test120(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test121(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test122(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test123(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test124(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test125(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test126(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test127(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test128(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test129(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test130(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test131(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test132(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test133(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test134(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test135(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test136(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test137(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test138(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test139(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test140(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test141(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test142(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test143(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test144(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test145(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test146(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test147(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test148(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test149(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test150(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test151(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test152(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test153(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test154(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test155(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test156(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test157(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test158(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test159(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test160(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test161(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test162(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test163(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test164(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test165(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test166(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test167(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test168(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test169(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test170(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test171(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test172(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test173(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test174(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test175(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test176(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test177(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test178(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test179(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test180(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test181(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test182(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test183(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test184(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test185(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test186(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test187(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test188(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test189(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test190(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test191(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test192(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test193(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test194(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test195(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test196(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test197(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test198(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test199(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test200(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test201(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test202(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test203(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test204(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test205(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test206(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test207(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test208(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test209(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test210(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test211(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test212(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test213(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test214(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test215(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test216(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test217(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test218(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test219(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test220(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test221(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test222(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test223(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test224(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test225(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test226(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test227(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test228(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test229(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test230(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test231(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test232(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test233(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test234(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test235(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test236(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test237(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test238(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test239(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test240(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test241(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test242(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test243(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test244(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test245(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test246(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test247(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test248(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test249(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test250(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test251(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test252(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test253(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test254(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test255(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test256(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test257(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test258(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test259(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test260(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test261(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test262(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test263(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test264(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test265(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test266(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test267(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test268(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test269(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test270(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test271(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test272(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test273(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test274(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test275(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test276(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test277(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test278(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test279(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test280(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test281(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test282(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test283(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test284(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test285(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test286(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test287(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test288(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test289(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test290(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test291(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test292(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test293(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test294(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test295(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test296(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test297(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test298(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test299(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test300(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test301(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test302(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test303(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test304(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test305(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test306(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test307(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test308(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test309(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test310(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test311(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test312(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test313(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test314(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test315(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test316(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test317(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test318(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test319(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test320(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test321(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test322(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test323(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test324(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test325(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test326(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test327(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test328(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test329(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test330(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test331(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test332(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test333(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test334(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test335(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test336(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test337(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test338(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test339(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test340(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test341(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test342(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test343(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test344(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test345(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test346(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test347(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test348(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test349(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test350(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test351(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test352(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test353(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test354(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test355(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test356(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test357(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test358(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test359(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test360(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test361(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test362(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test363(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test364(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test365(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test366(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test367(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test368(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test369(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test370(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test371(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test372(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test373(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test374(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test375(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test376(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test377(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test378(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test379(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test380(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test381(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test382(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test383(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test384(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test385(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test386(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test387(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test388(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test389(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test390(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test391(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test392(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test393(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test394(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test395(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test396(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test397(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test398(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test399(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test400(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test401(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test402(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test403(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test404(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test405(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test406(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test407(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test408(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test409(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test410(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test411(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test413(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test414(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test415(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test416(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test417(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test418(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test419(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test420(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test421(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test422(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test423(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test424(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test425(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test426(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test427(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test428(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test429(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test430(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test431(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test432(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test433(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test434(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test435(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test436(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test437(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test438(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test439(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test440(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test441(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test442(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test443(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test444(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test445(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test446(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test447(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test448(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test449(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test450(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test451(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test452(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test453(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test454(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test455(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test456(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test457(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test458(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test460(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test461(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test462(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test463(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test464(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test465(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test466(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test467(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test468(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test470(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test471(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test472(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test473(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test474(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test475(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test476(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test477(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test478(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test479(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test480(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test481(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test482(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test483(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test484(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test485(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test486(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test487(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test490(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test491(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test492(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test493(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test494(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test495(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test496(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test497(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test498(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test499(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
<test name="test500(test.xpdev.refactory.loader.jdk5.GenericTypeTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest">
<test name="testBugREF1948(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testOneSimpleParameter(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testTwoParameters(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testTwoParametersRecursion(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testMultilevelArguments(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testExtendsParametrizedType(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testInnerClassParameters(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
<test name="testParametrizedMembers(test.xpdev.refactory.loader.jdk5.GenericLoadFromBinaryTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.AutoBoxingTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test029(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test030(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test031(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test032(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test033(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test034(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test035(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test036(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test037(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test038(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test039(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test040(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test041(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test042(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test043(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test044(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test045(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test046(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test047(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test048(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test049(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test050(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test051(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test052(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test053(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test054(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test055(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test056(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test057(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test058(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test059(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test060(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test061(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test062(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test063(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test064(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test065(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test066(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test067(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test068(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test069(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test070(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test071(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test072(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test073(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test074(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test075(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test076(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test077(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test078(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test082(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test083(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test084(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test085(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test086(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test087(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test088(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test089(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test090(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test091(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test092(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test093(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test094(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test095(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test096(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test097(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test098(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
<test name="test099(test.xpdev.refactory.loader.jdk5.AutoBoxingTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.EnumTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test024(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test025(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test026(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test027(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test028(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test029(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test030(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test031(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test032(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test033(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test034(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test035(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test036(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test037(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test038(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test039(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test040(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test041(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test042(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test043(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test044(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test045(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test046(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test047(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test048(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test049(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test050(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test051(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test052(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test053(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test054(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test055(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test056(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test057(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test058(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test059(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test060(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test061(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test062(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test063(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test064(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test065(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test066(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test067(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test068(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test069(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test070(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test071(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test072(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test073(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test074(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test075(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test076(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test077(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test078(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
<test name="test000(test.xpdev.refactory.loader.jdk5.EnumTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.VarargsTest">
<test name="test001(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test002(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test003(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test004(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test005(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test006(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test007(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test008(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test009(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test010(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test011(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test012(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test013(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test014(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test015(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test016(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test017(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test018(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test019(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test020(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test021(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test022(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
<test name="test023(test.xpdev.refactory.loader.jdk5.VarargsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.loader.jdk5.GenericsInReturnTypeTest">
<test name="test(test.xpdev.refactory.loader.jdk5.GenericsInReturnTypeTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="null">
<testsuite name="test.xpdev.refactory.wtk.LoadingTest">
<test name="testBugRim256(test.xpdev.refactory.wtk.LoadingTest)"/>
</testsuite>
</testsuite>
<testsuite name="Refactorings">
<testsuite name="Where Used">
<test name="testBug96(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug105(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug106(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug107(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug121(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug124(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug125(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug127(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug130(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug142(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug143(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug151(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug156(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeCast(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testSubSuper(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testParameter(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testParameterUsedInFor(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testParameterUsedWhenMethodInvoked(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testParameterUsedWhenFieldAccessed(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testParameterUsedWhenElementsAccessed(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug179a(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug179b(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug181a(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug181b(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageA(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageB(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageC(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageD(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageE(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageF(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTypeUsageG(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testUsageOnCastedNull(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug211(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug212(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug213(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug256(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug257(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug258(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug259(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug262(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testOuterMethodInInner(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testOuterFieldInInner(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testFieldOfA(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testFieldOfB(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testFieldOfC(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testSubpackages(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testSubClassesWithMethods(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug1770(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testFieldOfD(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testFieldOfDInner2(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testMultiSelection1(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug1686(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testInvocation_in_super_private(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTest1(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testTest2(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug1941(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testInterfaceMethodUsage(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testNotOverridenMethodUsage(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testBug1957(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testAnotherBranch(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testMethodInvocations(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testWildcardsBug(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
<test name="testLabels(test.xpdev.refactory.refactorings.WhereUsedTest)"/>
</testsuite>
<testsuite name="null">
<testsuite name="null">
<testsuite name="com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests">
<test name="testClass(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testNoAccessInVarDeclaration(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testUsageInTypeCast(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testFieldAccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testRightSideOfSimpleAssignment(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testArray(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testReadAcces(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testWriteAccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
<test name="testReadAndWriteAcccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$LocalVariableFilterTests)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests">
<test name="testClass(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testNoAccessInVarDeclaration(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testUsageInTypeCast(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testFieldAccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testRightSideOfSimpleAssignment(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testArray(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testReadAcces(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testWriteAccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
<test name="testReadAndWriteAcccess(com.xpdev.refactory.query.usage.filters.BinVariableSearchFilter$FieldFilterTests)"/>
</testsuite>
</testsuite>
<testsuite name="com.xpdev.refactory.query.usage.filters.BinMethodSearchFilter$Tests">
<test name="testOverridesOnly(com.xpdev.refactory.query.usage.filters.BinMethodSearchFilter$Tests)"/>
<test name="testUsageAndOverride(com.xpdev.refactory.query.usage.filters.BinMethodSearchFilter$Tests)"/>
<test name="testUsagesOnly(com.xpdev.refactory.query.usage.filters.BinMethodSearchFilter$Tests)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests">
<test name="testUsagesOnly(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
<test name="testImportStatementsOnly(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
<test name="testFqnImportStatementsOnly(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
<test name="testPrefixedPackageContent(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
<test name="testPackageStatementsOnly(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
<test name="testNothing(com.xpdev.refactory.query.usage.filters.BinPackageSearchFilter$Tests)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.query.usage.filters.BinClassSearchFilter$Tests">
<test name="testUsages(com.xpdev.refactory.query.usage.filters.BinClassSearchFilter$Tests)"/>
<test name="testImportStatements(com.xpdev.refactory.query.usage.filters.BinClassSearchFilter$Tests)"/>
<test name="testMethodUsages(com.xpdev.refactory.query.usage.filters.BinClassSearchFilter$Tests)"/>
<test name="testFieldUsages(com.xpdev.refactory.query.usage.filters.BinClassSearchFilter$Tests)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests">
<test name="testUsages(com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests)"/>
<test name="testImportStatements(com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests)"/>
<test name="testMethodUsages(com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests)"/>
<test name="testFieldUsages(com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests)"/>
<test name="testImplementers(com.xpdev.refactory.query.usage.filters.BinInterfaceSearchFilter$Tests)"/>
</testsuite>
</testsuite>
<testsuite name="Not Used">
<test name="testBug154(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testBug155(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testMethodInvocationInSubclass(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUsageInsideTypeOnly(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUsageInsideOnly(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testBug1364(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testBug1605(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUnusedSublassA(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUnusedSublassB(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testTwoBranches(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testNew(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testImplicitConstructorCall(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testImplicitConstructorCallInImplicitConstructor(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testImplementation_search(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testBug1695(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testExcludePublicAndProtected(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUsedPrivateConstructor(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUseOfUSEDTag1(test.xpdev.refactory.refactorings.NotUsedTest)"/>
<test name="testUseOfUSEDTag2(test.xpdev.refactory.refactorings.NotUsedTest)"/>
</testsuite>
<testsuite name="FIXME Scanner">
<test name="testFixmeCount(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
<test name="testFindingInRange(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
<test name="testNoExtraLinesAppearWhenUnitingMultilineComments(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
<test name="testRegexp(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
<test name="testCommentInsideMethod(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
<test name="testAfterRebuild(test.xpdev.refactory.refactorings.FixmeScannerTest)"/>
</testsuite>
<testsuite name="FIXME Scanner Multiple Packages">
<test name="testFixmeCount(test.xpdev.refactory.refactorings.FixmeScannerMultiplePackagesTest)"/>
<test name="testFindingInRange(test.xpdev.refactory.refactorings.FixmeScannerMultiplePackagesTest)"/>
</testsuite>
<testsuite name="FIXME Timestamp">
<test name="testOnce(test.xpdev.refactory.refactorings.FixmeTimestampTest)"/>
<test name="testInternalCommentTextUpdate(test.xpdev.refactory.refactorings.FixmeTimestampTest)"/>
<test name="testNoNpeWithLowercaseWords(test.xpdev.refactory.refactorings.FixmeTimestampTest)"/>
<test name="testTimestampWithRegexpWords(test.xpdev.refactory.refactorings.FixmeTimestampTest)"/>
<test name="testReckognizingTimstampsWrittenForOtherLocalesAndStyles(test.xpdev.refactory.refactorings.FixmeTimestampTest)"/>
</testsuite>
<testsuite name="Metric">
<testsuite name="CyclomaticComplexityMetric tests">
<test name="testMethodA(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodB(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodC(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodD(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodE(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodF(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
<test name="testMethodG(com.xpdev.refactory.metrics.CyclomaticComplexityMetric$TestDriver)"/>
</testsuite>
<testsuite name="ExecutableStatementsMetric tests">
<test name="testMethodA(com.xpdev.refactory.metrics.ExecutableStatementsMetric$TestDriver)"/>
</testsuite>
<testsuite name="LOC metric tests">
<test name="testTest(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest3(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testPackage(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest1(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest2(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest4(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest5(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTest6(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestConstructor(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestConstructor2(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestA(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestB(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestC(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestD(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestE(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestF(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestG(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestH(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestI(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
<test name="testTestJ(com.xpdev.refactory.metrics.LocMetric$TestDriver)"/>
</testsuite>
<testsuite name="NCLOC metric tests">
<test name="testPackage(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestConstructor(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestConstructor2(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestA(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestB(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestC(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestD(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestE(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestF(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestG(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestH(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestI(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestJ(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
<test name="testTestBug1303(com.xpdev.refactory.metrics.NclocMetric$TestDriver)"/>
</testsuite>
<testsuite name="CLOC metric tests">
<test name="testTest(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest3(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest1(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest2(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest4(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest5(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTest6(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestConstructor(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestConstructor2(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestA(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestB(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestC(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestD(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestE(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestF(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestG(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestH(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestI(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
<test name="testTestJ(com.xpdev.refactory.metrics.ClocMetric$TestDriver)"/>
</testsuite>
<testsuite name="DC metric tests">
<test name="testTestConstructor(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestConstructor2(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestA(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestB(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestC(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestD(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestE(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestF(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestG(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestH(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestI(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
<test name="testTestJ(com.xpdev.refactory.metrics.DcMetric$TestDriver)"/>
</testsuite>
<testsuite name="DIP metric tests">
<test name="testTest3(com.xpdev.refactory.metrics.DipMetric$TestDriver)"/>
<test name="testTest1(com.xpdev.refactory.metrics.DipMetric$TestDriver)"/>
<test name="testTest2(com.xpdev.refactory.metrics.DipMetric$TestDriver)"/>
<test name="testTest4(com.xpdev.refactory.metrics.DipMetric$TestDriver)"/>
</testsuite>
<testsuite name="DIT metric tests">
<test name="testA(com.xpdev.refactory.metrics.DitMetric$TestDriver)"/>
<test name="testObject(com.xpdev.refactory.metrics.DitMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.DitMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.DitMetric$TestDriver)"/>
<test name="testCyclic(com.xpdev.refactory.metrics.DitMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOC metric tests">
<test name="testA(com.xpdev.refactory.metrics.NocMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.NocMetric$TestDriver)"/>
<test name="testB1(com.xpdev.refactory.metrics.NocMetric$TestDriver)"/>
<test name="testB2(com.xpdev.refactory.metrics.NocMetric$TestDriver)"/>
<test name="testD(com.xpdev.refactory.metrics.NocMetric$TestDriver)"/>
</testsuite>
<testsuite name="Ce metric tests">
<test name="testA(com.xpdev.refactory.metrics.EfferentCouplingMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.EfferentCouplingMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.EfferentCouplingMetric$TestDriver)"/>
<test name="testDefault(com.xpdev.refactory.metrics.EfferentCouplingMetric$TestDriver)"/>
</testsuite>
<testsuite name="EP metric tests">
<test name="testDefault(com.xpdev.refactory.metrics.EpMetric$TestDriver)"/>
<test name="testPackageA(com.xpdev.refactory.metrics.EpMetric$TestDriver)"/>
<test name="testPackageB(com.xpdev.refactory.metrics.EpMetric$TestDriver)"/>
<test name="testPackageC(com.xpdev.refactory.metrics.EpMetric$TestDriver)"/>
</testsuite>
<testsuite name="Ca metric tests">
<test name="testA(com.xpdev.refactory.metrics.AfferentCouplingMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.AfferentCouplingMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.AfferentCouplingMetric$TestDriver)"/>
<test name="testDefault(com.xpdev.refactory.metrics.AfferentCouplingMetric$TestDriver)"/>
</testsuite>
<testsuite name="Instability metric tests">
<test name="testA(com.xpdev.refactory.metrics.InstabilityMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.InstabilityMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.InstabilityMetric$TestDriver)"/>
<test name="testDefault(com.xpdev.refactory.metrics.InstabilityMetric$TestDriver)"/>
</testsuite>
<testsuite name="Abstractness metric tests">
<test name="testA(com.xpdev.refactory.metrics.AbstractnessMetric$TestDriver)"/>
<test name="testDefault(com.xpdev.refactory.metrics.AbstractnessMetric$TestDriver)"/>
</testsuite>
<testsuite name="Distance metric tests">
<test name="testA(com.xpdev.refactory.metrics.DistanceMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.DistanceMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.DistanceMetric$TestDriver)"/>
<test name="testDefault(com.xpdev.refactory.metrics.DistanceMetric$TestDriver)"/>
</testsuite>
<testsuite name="RFC metric tests">
<test name="testTest3(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest1(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest2(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest4(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest5(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest6(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
<test name="testTest7(com.xpdev.refactory.metrics.RfcMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOT metric tests">
<test name="testDefault(com.xpdev.refactory.metrics.TypeCountMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOTa metric tests">
<test name="testDefault(com.xpdev.refactory.metrics.AbstractTypeCountMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOTc metric tests">
<test name="testDefault(com.xpdev.refactory.metrics.ConcreteTypeCountMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOTe metric tests">
<test name="testDefault(com.xpdev.refactory.metrics.ExportedTypeCountMetric$TestDriver)"/>
</testsuite>
<testsuite name="CYC metric tests">
<test name="testA(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
<test name="testDepA(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
<test name="testDepB(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
<test name="testDepC(com.xpdev.refactory.metrics.CyclicDependencyMetric$TestDriver)"/>
</testsuite>
<testsuite name="DCYC metric tests">
<test name="testPackageA(com.xpdev.refactory.metrics.DirectCyclicDependencyMetric$TestDriver)"/>
<test name="testPackageB(com.xpdev.refactory.metrics.DirectCyclicDependencyMetric$TestDriver)"/>
<test name="testPackageC(com.xpdev.refactory.metrics.DirectCyclicDependencyMetric$TestDriver)"/>
</testsuite>
<testsuite name="LSP metric tests">
<test name="testA(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
<test name="testB(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
<test name="testC(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
<test name="testD(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
<test name="testE(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
<test name="testF(com.xpdev.refactory.metrics.LspMetric$TestDriver)"/>
</testsuite>
<testsuite name="NT metric tests">
<test name="testMethodA(com.xpdev.refactory.metrics.NumberOfTrampsMetric$TestDriver)"/>
<test name="testMethodB(com.xpdev.refactory.metrics.NumberOfTrampsMetric$TestDriver)"/>
<test name="testMethodC(com.xpdev.refactory.metrics.NumberOfTrampsMetric$TestDriver)"/>
<test name="testMethodD(com.xpdev.refactory.metrics.NumberOfTrampsMetric$TestDriver)"/>
<test name="testMethodE(com.xpdev.refactory.metrics.NumberOfTrampsMetric$TestDriver)"/>
</testsuite>
<testsuite name="LCOM metric tests">
<test name="testLCOMtest1(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
<test name="testLCOMtest1Inner(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
<test name="testLCOMtest2(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
<test name="testLCOMtest2Inner(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
<test name="testLCOMtest3(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
<test name="testLCOMtest4(com.xpdev.refactory.metrics.LackOfCohesionMetric$TestDriver)"/>
</testsuite>
<testsuite name="NOF metric tests">
<test name="testMethodA(com.xpdev.refactory.metrics.NumberOfFieldsMetric$TestDriver)"/>
<test name="testMethodB(com.xpdev.refactory.metrics.NumberOfFieldsMetric$TestDriver)"/>
<test name="testMethodC(com.xpdev.refactory.metrics.NumberOfFieldsMetric$TestDriver)"/>
</testsuite>
<testsuite name="Metrics">
<test name="testBug1604(test.xpdev.refactory.metrics.HtmlOutputTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.metrics.DialogTest">
<test name="testDialog(test.xpdev.refactory.metrics.DialogTest)"/>
</testsuite>
<testsuite name="NOA metric tests">
<test name="testClassTest1(com.xpdev.refactory.metrics.NumberOfAttributesMetric$TestDriver)"/>
<test name="testInterfaceTest2(com.xpdev.refactory.metrics.NumberOfAttributesMetric$TestDriver)"/>
<test name="testClassTest3(com.xpdev.refactory.metrics.NumberOfAttributesMetric$TestDriver)"/>
</testsuite>
</testsuite>
<testsuite name="DependenciesIndexer tests">
<test name="testNew(com.xpdev.refactory.query.dependency.DependenciesIndexer$TestDriver)"/>
<test name="testConstructorInvocations(com.xpdev.refactory.query.dependency.DependenciesIndexer$TestDriver)"/>
<test name="testStringConcatenation(com.xpdev.refactory.query.dependency.DependenciesIndexer$TestDriver)"/>
</testsuite>
<testsuite name="MoveType tests">
<test name="testProgressBar(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotCreatingFileToExtractToInCaseOfErrors(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testTypeAlreadyInDestinationFolder(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMovingTwoClassesInSameFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictResolve(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictResolveForBinMember(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRenamePackageInJspImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertJspImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertJspImport_removeOldWholePackageImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertJspImport_fromDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMovingLocalTypesNotAllowed(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertJspImport_fromDefaultPackage_noImportsYet(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertJspImport_intoDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1954(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportsPlacing(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExportToAnotherPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExportToSamePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1161(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1415(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testbug1496(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1475(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1518(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1519(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testBug1753(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRelocate1(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRelocate2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRelocate3(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRelocate4(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testManyMovesInARow(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAccessConflictWithProtectedMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAccessConflictWithProtectedMembers_noConflict(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDirectlyImportedClassGetsMovedToSamePackageWhereItsImported(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportCreationWhenMovingToDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportCreationWhenMovingToDefaultPackage_extractType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemovingImportStatementsWhenMovingToDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotCreatingImportStatementsWhenMovingAwayFromDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testSuperConstructorCallInMovedType_superTypeIsInSourcePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testThisReferencing(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAddingFqnImportsForInnerTypes(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAddingFqnImportsForInnerTypes_twoLevelsDeep(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAddingFqnImportsForInnerTypes_importClauseReferencesInnerType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports_array(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports_importedFromSourcePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports_2_importedFromSourcePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testReadingFqnImports_array_importedFromSourcePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemovingFqnImportsOfInnerTypes_importInMovedFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemovingFqnImportsOfInnerTypes_importInTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement_spacesBeforeSemicolon(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement_commentsBeforeSemicolon(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement_newlineBeforeSemicolon(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement_spaceAndNewlineBeforeSemicolon(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoNewlineAfterPackageStatement_spaceAndNewlineBeforeSemicolon_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testSearchingCommonPath(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testSuperInvocation(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_fqnImportWillBeCreatedLater(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_fqnUsage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_implicitJavaLangObjectExtend(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_conflict_explicitNonFqnJavaLangObjectExtend(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_explicitFqnJavaLangObjectExtend(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_conflict_nonFqnJavaLangObjectUsage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_fqnImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_conflict_nonFqnImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConfclitsInMovedSources_noConflict_extractToSamePackageWhileImportingOwnPackageOnDemand(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportConflictsInMovedSources_conflictOverInnerClassWithSameNameInTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictOverInnerClassWithSameNameBeingMoved(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictOverClassWhoseInnerClassIsUsed(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_oneClassIsInnerClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_fqnUsageFromTragetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_fqnImportFromTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_onlyUserIsClassItself(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_importOnDemandFromTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_fqnImportFromNonTargetPackage_alsoImportSomethingFromTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflict_fqnImportFromNonTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictInTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictInNonTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictOverExplicitNonFqnJavaLangObjectReference_nonTargetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflictOverExplicitNonFqnJavaLangObjectReference_targetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflictOverExplicitNonFqnJavaLangObjectReference_targetPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_noConflictOverExplicitNonFqnJavaLangObjectReference_targetPackage_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflict_typeExtractedToSamePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testOtherFilesImportConflicts_conflict_typeExtractedToSamePackage_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInnerClassLoosesAccessToPrivateMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInnerClassLoosesAccessOnlyToPrivateMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testIsFqnUsageDoesNotThrowExceptions(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testArrayTypeGetsImportedFromOldPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testIllegalOneTypeImportFromDefaultPackageDoesNotCauseExceptions(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testIllegalDefaultPackageImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertingAndErasingImportsAtTheSameLine(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testInsertingAndErasingImportsAtTheSameLine_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotImportingClassesFromSourcePackageThatAreAlsoMoved(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotImportingClassesFromSourcePackageThatAreAlsoMoved_innerTypes(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotImportingClassesFromSourcePackageThatAreAlsoMoved_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemoveWholePackageImportWhenNoClassesLeftInPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemoveWholePackageImportWhenNoClassesLeftInPackage_twoImportsInOneFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRemoveWholePackageImportWhenNoClassesLeftInPackage_multipleFiles(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testWholePackageImport_reckognizingFqnImportWithMultiLevelPackageNames(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractWithEmptyLines(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMovingTwoFilesToDefaultPackageFirstFileIsAlreadyThere(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testTabSizeEffectOnExtract(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testTabSizeEffectOnExtract_tabSize2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testUpdateForLineResizeInRenameEditor(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotInsertingImportsForIndirectUsages_methodAndFieldInvocation(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testAddingImportToOldPackageTypes_innerTypeArray(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImplementingInnerInterfaceThatExtendsItsOuterInterface(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMemberVisibilityEditorAndStaticModifierEraserUpdateEeachothersNodes(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType_constructorCall(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType_protectedConstructorCall(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType_publicConstructorCall(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType_array(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOuterType_fqn_noImport(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromOuterClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromAnotherClassInSameFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromAnotherClassInSameFile_bothTypesAreMoving(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromAnotherClassInSameFile_bothTypesAreMoving_deepLevelInner(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromAnotherClassInSameFile_bothTypesAreMoving_deepLevelInner_ownerMoves(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesFieldsFromAnotherClassInSameFile_bothTypesAreMoving_prefixDependsOnWhichOwnerMoves(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromOuterClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromOuterClass_prefixAlreadyPresent(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromOuterClass_moveToOtherPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromOuterClass_nonStaticMethod(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromSuperTypeOfOuterClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractedTypeUsesMethodsFromSuperTypeOfOuterClass_superMoving(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOtherTypes(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOtherTypes_fqn(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOtherTypes_nonDefaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOtherTypes_changingImportStatement_defaultPackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingExtractedInnerTypeInOtherTypes_changingImportStatement(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOnExtract(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportsInOuterIfTwoInnersAreMoving(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLinesAreNotShiftedBeforeLocationAwareMover(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNonStaticInnerClassExtract(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNonStaticInnerClassExtract_usesNonStaticMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNonStaticInnerClassExtract_usesNonStaticMembers_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNonStaticInnerClassExtract_usesNonStaticMembersThroughSelfCreatedReference(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testCalledItemWillBeInaccessible_calledItemNotMoving(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDeletingMultipleImportsOnTheSameLine(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRenameEditorNotifiersOtherEditorsOnSameLine(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRenameEditorNotifiersOtherEditorsOnSameLine_multipleRenameEditorsOnOneLine(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNewlineBetweenTwoImportStatements(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMovingMultipleTypesWithSameName(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMemberVisibilityEditorNotifiesOtherEditors(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMemberVisibilityEditorNotifiesOtherEditors_defaultVisibility(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingInnerClassesOnDemand_asteriskMustNotBeCountedAsPartOfTypeName(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingInnerClassesOnDemand_asteriskImportMustNotBeDeletedLater(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingInnerClassesOnDemand_outerTypeNeedsImportingToo(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedFieldOfMovingSuperType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedMethodOfMovingSuperType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerMemberOfMovingSuperType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_BinTypeExpression(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_BinCastExpression(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_throwsClause(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_throwClause(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_catchClause(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_methodParameter(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_extendsClause(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_implementsClause(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_arrayOfInner(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_arrayCreation(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testLoosingAccessToUsedInnerOfMovingSuperType_usageInSubclass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingImplementedInterfacesFromSourcePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOfMembers_field(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOfMembers_method(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOfMembers_method_inherited(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOfMembers_innerClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testFqnUsageOfMembers_innerClassMember(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotGeneratingFqnImportsForMovedTypesInDestinationPackageIfTheTypesWerePreviouslyImportedOnDemand(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotGeneratingFqnImportsForMovedTypesIfTheTypesWillBeImportedOnDemand(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testUsingProtectedMembersInSubclassesDoesNotCauseConflictsIfSuperclassIsMoved(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testRelocationOfTwoClassesInSameFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingArraysOnExtract(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingAnonymousClassSupers_extract(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingAnonymousClassSupers_extract_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testImportingAnonymousClassSupers_extract_2_class(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_accessConflictWithProtectedMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_accessConflictWithProtectedMembers_protectedNeeded(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_usesOtherPackageAccessMembers(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_usesOtherPackageAccessMembers_protectedNeeded(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByMovedType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByMovedType_samePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByMovedType_needProtectedAccess(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByEnclosingClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByEnclosingClass_samePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByEnclosingClass_alreadyPackagePrivate(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_privateMembersInToplevelEnclosingClass_usedByEnclosingClass_alreadyPackagePrivate_samePackage(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_packageAccessClassTurnsToPublic(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_notMovedPackageAccessClassTurnsToPublic(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_packageAccessClassTurnsToPublic_usedAsArray(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_packageAccessClassTurnsToPublic_usedAsArray_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testModifierChange_packageAccessClassTurnsToPublic_usedAsArray_3(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflict_privateMembersInToplevelEnclosingClass_usedByEnclosingClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNoConflict_extractedTypeUsesPrivateFieldInsideItsInnerClass(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDifferentFqnsReferingToSameType(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictingReference_supertypesNotMentioned(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictingReference_supertypesNotMentioned_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictingReference_noConflictIfNameNotExplicitlyMentioned(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictingReference_conflictIfNameExplicitlyMentioned(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testConflictingReference_conflictIfNameExplicitlyMentioned_2(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testCannotMoveNonSourcepathItems(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotDeletingRootFolderAfterAllFilesRemoved(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDeletingEmptyFolderAfterMovingFilesIfUserSaysYes(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDeletingEmptyFolderAfterMovingFilesIfUserSaysYes_folderContainsClassFile(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testNotDeletingEmptyFolderAfterMovingFilesIfUserSaysNo(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDoNotAskToDeleteANonEmptyFolder(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDoNotAskToDeleteANonEmptyFolder_folderHasOnlyNonSourcepathChildren(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testDoNotAskToDeleteANonEmptyFolder_folderHasOnlyHiddenChildren(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testMovingBakFiles(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractMainTypeButWrongDir(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractWrongSourcepathRoot(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testStaticImports(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testIssue251(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testIssue245(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testPathsInNonJava(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
<test name="testExtractWithJavadoc(test.xpdev.refactory.refactorings.MoveTypeTest)"/>
</testsuite>
<testsuite name="Extract Method tests">
<test name="test1(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test010(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test011(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test012(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test013(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test014(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test020(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test021(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test022(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test030(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test031(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test040(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test041(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test042(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test043(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test044(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test045(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test046(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test047(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test048(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test050(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test051(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test052(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test060(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test061(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test062(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test070(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test071(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test072(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test073(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test080(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test081(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test082(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test083(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test084(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test085(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test090(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test091(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test092(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test093(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test094(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test095(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test096(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test100(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test101(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test102(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test103(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test104(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test105(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test106(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test107(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test108(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test109(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test110(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test111(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test112(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test113(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test114(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test115(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test120(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test121(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test122(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test123(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test130(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test131(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test140(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test141(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test142(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test143(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test144(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test145(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test146(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test147(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test148(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test149(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test150(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test151(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test152(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test153(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test160(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test161(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test170(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test171(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test172(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test173(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test180(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test181(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test190(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test191(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test192(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test193(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test200(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test201(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test202(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test203(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test230(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test231(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test232(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test233(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test234(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test235(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test240(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test241(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test244(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test245(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test246(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test247(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test248(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test249(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test250(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test251(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test252(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test253(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test254(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test255(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test260(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test261(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test262(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test263(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test270(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test271(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test272(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test273(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test274(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test275(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test280(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test281(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test282(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test283(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test284(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test285(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test300(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test301(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test302(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test304(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test305(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test306(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test307(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test308(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test309(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test310(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test311(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test350(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test351(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test352(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test353(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test360(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test361(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test362(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test363(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test364(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test365(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test400(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test401(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test402(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test403(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test404(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test406(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test407(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test409(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test450(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test451(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test452(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test453(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test454(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test455(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test456(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test457(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test458(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test460(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test461(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test462(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test500(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBenchmark1(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBenchmark2(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBenchmark3(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBenchmark4(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBenchmark5(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testExtractExpression1(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1317(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1401(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1402(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1450(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testVarInLoop(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testVarInLoopReturn(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testExceptionByNew(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testFqnUsage(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testInnerClassesInGenerics(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testParamRename(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1529(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1529_inside_expression(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1529_inside_method_call(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1619StringLiteral(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1619CharLiteral(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1619BothLiterals(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1581(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1606(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1607(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1634(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1634_2(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1667(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1871(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1787(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1938(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug2016(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug1904(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug2139(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testIssue238(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testBug2255(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testExtractInAnonymous(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testTypeParams1(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test459(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test501(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test502(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test503(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test504(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test505(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test506(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test507(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test508(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test509(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test510(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test511(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test512(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test513(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test514(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test515(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test516(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test517(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test518(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test519(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test520(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test521(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test522(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test523(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test524(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test525(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test526(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test527(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test528(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test530(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test531(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test532(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test533(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test534(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test535(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test536(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test537(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test538(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test539(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test540(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test541(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test542(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test543(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test550(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test551(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test552(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test553(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test554(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test555(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test556(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test557(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test558(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test559(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test560(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test561(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test562(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test563(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test564(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test565(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test566(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test567(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test568(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test569(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test600(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test601(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test602(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test603(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test604(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test605(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test606(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test607(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test608(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test609(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test610(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test611(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test612(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test613(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test614(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test615(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test616(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test617(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test618(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test619(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test620(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test621(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test622(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test650(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test651(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test652(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test653(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test654(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test700(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test701(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test702(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test703(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test704(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test705(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test706(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test707(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test708(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test709(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test710(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test711(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test712(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test713(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test714(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test715(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test716(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test717(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test718(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test719(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test720(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test721(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test722(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test723(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test724(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test725(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test726(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test727(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test728(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test750(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test751(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test752(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test753(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test754(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test755(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test950(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test951(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test952(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test953(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test954(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test955(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test956(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test1000(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test1001(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test1002(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="test1003(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
<test name="testErrorMessagesForReadOnlyFiles(test.xpdev.refactory.refactorings.ExtractMethodTest)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.refactorings.apisnapshot.SnapshotDiff$SelfTest">
<test name="testEmpty(com.xpdev.refactory.refactorings.apisnapshot.SnapshotDiff$SelfTest)"/>
<test name="testAddingAll(com.xpdev.refactory.refactorings.apisnapshot.SnapshotDiff$SelfTest)"/>
<test name="testRemovingAll(com.xpdev.refactory.refactorings.apisnapshot.SnapshotDiff$SelfTest)"/>
<test name="testAddAndRemoveTogether(com.xpdev.refactory.refactorings.apisnapshot.SnapshotDiff$SelfTest)"/>
</testsuite>
<testsuite name="ExtractSuper tests">
<test name="testTypeParams1(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testImplementsExtractSuperclass(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleExtractSuperclass(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleExtractInterface(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleExtend(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleImplement(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleOverride(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testExtractJavadocs(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testProxyConstructor(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testProxyConstructor2(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testAddImplement(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testAddImplementToExtend(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleExtendButImplementLeft(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testSimpleExtendButImplementLeft2(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testReplaceExtend(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testAddMoreImplementsToExtend(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testReplaceImplement(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testReplaceExtendAndRemoveImplement(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testReplaceExtendAndRemoveImplement2(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testTreatComments(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testBugRIM729(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testBug1735(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testReturnTypeIsInnerArray(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testPrivateToProtected(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testImportOfAbstractReturn(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testImportOfAbstractReturn2(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testBug1853(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testExtractJavadocsForInterface(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testExtractInterfaceFromInterface(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<test name="testExtractToNewPackage(test.xpdev.refactory.refactorings.ExtractSuperTest)"/>
<testsuite name="ExtractSuperDialog tests">
<test name="testE(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testF(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testA1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testA2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testB1_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testB1_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testB2_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testB2_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testC1_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testC1_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testC2_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testC2_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testD1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testD2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testG_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testG_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testH_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testH_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPublicField(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPrivateField_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPrivateField_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPublicField2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPublicField3_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPublicField3_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPrivateField2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPrivateField3_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testPrivateField3_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testUnselectMethodA2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testUnselectMethodA1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testUnselectMethodB1_1(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
<test name="testUnselectMethodB1_2(com.xpdev.refactory.ui.module.extractsuper.ExtractSuperDialog$TestDriver)"/>
</testsuite>
<testsuite name="ExtractSuper with old name tests">
<test name="testTypeParams1(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testImplementsExtractSuperclass(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleExtractSuperclass(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleExtractInterface(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleExtend(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleImplement(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleOverride(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testExtractJavadocs(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testProxyConstructor(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testProxyConstructor2(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testAddImplement(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testAddImplementToExtend(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleExtendButImplementLeft(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testSimpleExtendButImplementLeft2(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testReplaceExtend(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testAddMoreImplementsToExtend(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testReplaceImplement(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testReplaceExtendAndRemoveImplement(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testReplaceExtendAndRemoveImplement2(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testTreatComments(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testBugRIM729(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testBug1735(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testReturnTypeIsInnerArray(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testPrivateToProtected(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testImportOfAbstractReturn(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testImportOfAbstractReturn2(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testBug1853(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testExtractJavadocsForInterface(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testExtractInterfaceFromInterface(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
<test name="testExtractToNewPackage(test.xpdev.refactory.refactorings.ExtractSuperWithOldNameTest)"/>
</testsuite>
</testsuite>
<testsuite name="Rename">
<testsuite name="Rename label test">
<test name="testLabelRename(test.xpdev.refactory.refactorings.rename.RenameLabelTest)"/>
</testsuite>
<testsuite name="Rename Package tests">
<test name="testPathsInNonJava(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testDeletingClassFiles(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_delete_classes(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_two_sourceroots(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testRenamingBackAndForth(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testRenamingBackAndForth_prefix(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_renameTopFolder(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_movedown(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_movedown_long(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_movedown_middle_folder_has_files(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1187_prefix_moveup(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testSinglePackage_movingNonJavaFiles(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testSourcesRelocatedSilently(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testWarnOfRelocationForManualCvs_answerYes(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testWarnOfRelocationForManualCvs_answerNo(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testNoWarningOfRelocationForCvsSupport(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testWarningMessageForNotRelocatedFiles(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testWarningMessageForNotRelocatedFiles_sourceFailure(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testWarningMessageForNotRelocatedFiles_renamePrefix(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testCannotRenamePrefixToMatchExistingPackage(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testCanRenamePrefixToMatchParentOfExistingPackage(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testCannotRenameToMatchExistingPackage(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testNoDirs(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testNoDirs1(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1566(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testBug1566_WhitespaceAroundAsterisk(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testPathsInNonJavaPrefixes(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testErrorMessagesDoNotContainHashCode(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testFilenamesDifferInCaseOnly_windows(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testFilenamesDifferInCaseOnly_nonWindows(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testFilenamesDifferInCaseOnly_prefix_windows(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testFilenamesDifferInCaseOnly_prefix_nonWindows(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testRenamePackageInNonJavaFiles(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<test name="testMultipleLines(test.xpdev.refactory.refactorings.rename.RenamePackageTest)"/>
<testsuite name="test.xpdev.refactory.refactorings.ParentFinderTest">
<test name="testFindParent(test.xpdev.refactory.refactorings.ParentFinderTest)"/>
<test name="testFindRoot(test.xpdev.refactory.refactorings.ParentFinderTest)"/>
<test name="testFindParents(test.xpdev.refactory.refactorings.ParentFinderTest)"/>
<test name="testFindParents_badFolderName(test.xpdev.refactory.refactorings.ParentFinderTest)"/>
</testsuite>
</testsuite>
<testsuite name="Rename Field Tests">
<test name="testBug1779_1(test.xpdev.refactory.refactorings.rename.RenameFieldTest)"/>
<test name="testBug1779_2(test.xpdev.refactory.refactorings.rename.RenameFieldTest)"/>
<test name="testBug1779_3(test.xpdev.refactory.refactorings.rename.RenameFieldTest)"/>
<test name="testBug1779_4(test.xpdev.refactory.refactorings.rename.RenameFieldTest)"/>
<testsuite name="Rename Non Private Field">
<test name="test1(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail3(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail9(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail10(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail11(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail12(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail13(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testFail14(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
<test name="testBug5821(test.xpdev.refactory.refactorings.rename.RenameNonPrivateFieldTest)"/>
</testsuite>
<testsuite name="Rename Private Field">
<test name="test1(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail3(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.rename.RenamePrivateFieldTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest">
<test name="testGetSetterAndGetGetter(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenameBoth(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenameMethodsInEntireInheritanceHierarchy(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testBooleanGetters(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testBooleanGetters2(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenamingPrivateFieldsWithAccessorsUsedInOtherFiles(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenamingGetterInSuperclass(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenameConflictInSuperclass(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenameConflictInSameClassAsField(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
<test name="testRenameConflictInSubclass(test.xpdev.refactory.refactorings.rename.RenameWithGettersAndSettersTest)"/>
</testsuite>
</testsuite>
<testsuite name="Rename Method Tests">
<test name="testRenameSubMethodUsages(test.xpdev.refactory.refactorings.rename.RenameMethodTest)"/>
<test name="testRenameThisUsagesInSubClass(test.xpdev.refactory.refactorings.rename.RenameMethodTest)"/>
<test name="testRenameThisUsagesInSubClass2(test.xpdev.refactory.refactorings.rename.RenameMethodTest)"/>
<test name="testBug2056(test.xpdev.refactory.refactorings.rename.RenameMethodTest)"/>
<testsuite name="Imported RenameVirtualMethodInClassTests">
<test name="test1(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail9(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail10(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail11(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail12(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail13(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail14(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail15(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail17(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail18(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail19(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail20(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail21(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail22(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail23(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail24(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail25(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail26(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail27(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail28(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail30(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail31(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail33(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail34(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail35(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail36(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail37(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testFail38(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test18(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test19(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test20(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test21(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test22(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test23(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test24(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test25(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test26(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test27(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test28(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test29(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test30(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test31(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="test33(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
<test name="testAnon0(test.xpdev.refactory.refactorings.rename.RenameVirtualMethodInClassTest)"/>
</testsuite>
<testsuite name="Imported RenameStaticMethodTests">
<test name="test1(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
</testsuite>
<testsuite name="Imported RenamePrivateMethodTests">
<test name="test0(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test18(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test20(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test23(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test24(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test25(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test26(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="test27(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
<test name="testAnon0(test.xpdev.refactory.refactorings.rename.RenamePrivateMethodTest)"/>
</testsuite>
<testsuite name="Imported RenameStaticMethodTests">
<test name="test1(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.rename.RenameStaticMethodTest)"/>
</testsuite>
</testsuite>
<testsuite name="Rename Local Variable">
<test name="testRenameParametersInHierarchy(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testRenameParametersInHierarchy2(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testRenameParametersInHierarchy3(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testRenameSeveralOnSameLine(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testRenameIfVarWithSameNameExistsButInDifferentScope(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testInAccessibleScope(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
<test name="testBug2209(test.xpdev.refactory.refactorings.rename.RenameLocalTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.rename.RenameTypeTest">
<test name="testPathsInNonJava(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testBug1636(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testMultiVarDeclaration(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testBug1980(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testBug2035(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testTargetSourceExists(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename1(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename2(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename3(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename4(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename5(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename6(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename7(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename8(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename9(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename10(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename11(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
<test name="testSemanticRename12(test.xpdev.refactory.refactorings.rename.RenameTypeTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.rename.RenameConflictsTest">
<test name="testImportedClassWillHaveNameOfAnotherClassInUsersPackage(test.xpdev.refactory.refactorings.rename.RenameConflictsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest">
<test name="testRenamePackage(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
<test name="testRenameField(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
<test name="testRenameClass(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
<test name="testRenameImportedType(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
<test name="testRenameMethod(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
<test name="testShadesStaticImport(test.xpdev.refactory.refactorings.rename.RenameWithStaticImportsTest)"/>
</testsuite>
</testsuite>
<testsuite name="Javadoc">
<testsuite name="Rename Javadoc Parameter">
<test name="testWork1(test.xpdev.refactory.refactorings.javadoc.RenameJavadocParameterTest)"/>
</testsuite>
<testsuite name="Rename Javadoc Fields">
<test name="testWork1(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork2(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork3(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork4(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork5(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork6(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
<test name="testWork7(test.xpdev.refactory.refactorings.javadoc.RenameJavadocFieldTest)"/>
</testsuite>
<testsuite name="Rename Javadoc Methods">
<test name="testWork1(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
<test name="testWork2(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
<test name="testWork3(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
<test name="testWork4(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
<test name="testWork5(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
<test name="testWork6(test.xpdev.refactory.refactorings.javadoc.RenameJavadocMethodTest)"/>
</testsuite>
<testsuite name="Rename Javadoc Types">
<test name="testWork1(test.xpdev.refactory.refactorings.javadoc.RenameJavadocTypeTest)"/>
<test name="testWork2(test.xpdev.refactory.refactorings.javadoc.RenameJavadocTypeTest)"/>
</testsuite>
<testsuite name="Rename Javadoc Package">
<test name="testWork1(test.xpdev.refactory.refactorings.javadoc.RenameJavadocPackageTest)"/>
<test name="testWork2(test.xpdev.refactory.refactorings.javadoc.RenameJavadocPackageTest)"/>
<test name="testWork3(test.xpdev.refactory.refactorings.javadoc.RenameJavadocPackageTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.javadoc.JavadocTest">
<test name="testSimpleTags(test.xpdev.refactory.refactorings.javadoc.JavadocTest)"/>
<test name="testTagsWithEmptyNamesDoNotCrash(test.xpdev.refactory.refactorings.javadoc.JavadocTest)"/>
</testsuite>
</testsuite>
<testsuite name="EncapsulateField tests">
<test name="testSimple(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testCustomAccessorName(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testExpressions(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testStatic(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testFinal(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testbug1527(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
<test name="testMultipleAssignment(test.xpdev.refactory.refactorings.EncapsulateFieldTest)"/>
</testsuite>
<testsuite name="Structure search">
<testsuite name="Structure Search Field">
<test name="testObject(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testString(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testStringSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testObjectSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testBigDecimal(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testBigDecimalSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testStringArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testStringArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testObjectArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testObjectArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testBigDecimalArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testBigDecimalArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testPrimitiveIntArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testNonExistPrimitiveDoubleArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testPrimitiveDoubleArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testNonExistPrimitiveChar(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testPrimitiveCharArray(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testNonExistPrimitiveByte(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testPrimitiveBoolean(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
<test name="testPrimitiveFloat(test.xpdev.refactory.refactorings.structure.StructureSearchFieldTest)"/>
</testsuite>
<testsuite name="Structure Search Method Parameter">
<test name="testObject(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testString(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testStringSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testObjectSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testBigDecimal(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testBigDecimalSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testStringArray(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testStringArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testObjectArray(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testObjectArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testBigDecimalArray(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testBigDecimalArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesExcluded1(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesIncluded1(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesExcluded2(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesIncluded2(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesExcluded3(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesIncluded3(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesNonExistIncluded(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
<test name="testPrimitivesNonExistExcluded(test.xpdev.refactory.refactorings.structure.StructureSearchParamTest)"/>
</testsuite>
<testsuite name="Structure Search Method Return">
<test name="testObject(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testString(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testStringSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testObjectSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testBigDecimal(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testBigDecimalSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testStringArray(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testStringArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testObjectArray(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testObjectArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testBigDecimalArray(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testBigDecimalArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testPrimitiveDouble(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testPrimitiveDoubleSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testPrimitiveShort(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testPrimitiveShortSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testNonExistingPrimitiveFloat(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
<test name="testNonExistingPrimitiveFloatSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchReturnTest)"/>
</testsuite>
<testsuite name="Structure Search Type Cast">
<test name="testTest(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testObject(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testString(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testStringSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testObjectSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testBigDecimal(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testBigDecimalSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testTestSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testBigInteger(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testBigIntegerSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testPtimitiveInt(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testPtimitiveIntSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testPtimitiveIntArray(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
<test name="testPtimitiveIntArraySubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchTypeCastTest)"/>
</testsuite>
<testsuite name="Structure Search instanceof Operator">
<test name="testA(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testB(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testC(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testD(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testASubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testBSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testCSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testDSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testJavaLangObj(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
<test name="testJavaLangObjSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchInstanceofTest)"/>
</testsuite>
<testsuite name="Structure Search comparison Operator">
<test name="testA(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testB(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testC(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testD(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testString(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testASubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testBSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testCSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testDSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testJavaLangObject(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testJavaLangObjectSubtypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testint(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testintSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testStringSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testchar(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
<test name="testcharSubTypes(test.xpdev.refactory.refactorings.structure.StructureSearchComparisonEqTest)"/>
</testsuite>
</testsuite>
<testsuite name="Minimize Access Rights">
<test name="testImplicitConstructorCall(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights1(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights2(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights3(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights4(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights5(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights6(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights7(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights8(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights9(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights10(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights11(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessForInner1(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessIfUsedInAnonymous(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods_virtualFieldMethods(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods_SessionBean(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods_BeanSubclass(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods_bussinessMethods(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleEjbMethods_messageBean(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testReturnValueMutable_MinimizeAccessUtil_findMethodAccessRights(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights12(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testChangeAccess1(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testChangeAccessWithAnnotations(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights13(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckPossibleAccessRights14(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckExplicitConstructorCall(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testProtectedFromSamePackage(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckOverrides(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckExtendsConstructor(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckOverridesInDifferentPackage(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testCheckProtectedAccessInDifferentPackage(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testBug2198(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
<test name="testIssue596(test.xpdev.refactory.refactorings.MinimizeAccessRightsTest)"/>
</testsuite>
<testsuite name="MoveMember tests">
<test name="testArrayTypeParameters(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testFieldIntoInterface(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testGeneralImports(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testImportsOfStatic(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAlreadyDefinedConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testOverridesAndOverridenConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUpdateStaticUsage(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testCallOnParameterType(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testCallOnParameterType2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testCallOnRandomInstance(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAddNativeTypeParam(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAddNativeTypeParam2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAddNativeTypeParam3(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAddNativeTypeParam4(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveNotPossibleConflict1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveNotPossibleConflict2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveNotPossibleConflict3(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testImportNotPossibleConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testImportNotPossibleConflict2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict1_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict1_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict2_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict2_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRef_AlwaysMove(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict3_ResolveChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict4_ResolveChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict5_ResolveMakeStatic(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict_AlwaysMakeStatic1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRef_AlwaysChangeAccess2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRef_AlwaysChangeAccess4(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict6_ResolveMove(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughRefConflict7_NoConflict1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughClassNameConflict1_ResolveChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUsedByThroughClassNameConflict2_AlwaysChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughRefConflict1_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughRefConflict1_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughRefConflict2_NoConflict1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughRefConflict3_ResolveChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict1_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict1_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict2_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict2_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict_AlwaysChangeAccess1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict_AlwaysChangeAccess2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict_AlwaysMove1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughThisConflict_AlwaysMove2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughClassNameConflict1_Resolve1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughClassNameConflict1_Resolve2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDRUseThroughClassNameConflict2_AlwaysChangeAccess1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testInstanceMethodCallWithinStaticTargetContext(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testReuseFirstOfTwoParameters(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNotRemoveParamUsedForStayingMember(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveMethodCalledOnComplexExprWhenPullUp(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testRemoveParamUsedForRecursiveCall(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict1_Declaration1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict1_Definition1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict2_Declaration1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict3_Declaration1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict4_Declaration1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict_AlwaysDefinition1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDeclarationOrDefinitionConflict_AlwaysDefinition2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testStaticFieldIntoInterface1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMethodIntoInterface1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNotStaticFieldIntoInterface(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testFieldForInterfaceIsAssignedWhenUsed(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testStaticMethodIntoInterfaceConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testFieldWithExpressionIntoInterface1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testFieldNeedsImport1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUseQualifiedNameOfInner_AddOwnerOfInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUseQualifiedNameOfInner_RemoveOwnerOfInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUseQualifiedNameOfInner_ChangeAccessOfInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNoConflictForInnerLocalClass(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMakeStaticForUsedChangeAccessForUses(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIfUsesToStringSkipIt(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug1850_1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug1850_2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug1863(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testInstanceFinderBug1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testWrongParameterNameBug(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug1873(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug2051(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMainIntoWrongClassConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesThroughThisIntoNonStaticInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesThroughThisIntoStaticInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsedByIntoNonStaticInner1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsedByIntoStaticInner1_ResolveMakeStatic(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesThroughThisIntoNonStaticInner_MoveNotPossible1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsedOnComplexExpression(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveMethodAtWwwRefactoringCom1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveMethodAtWwwRefactoringCom1_2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAmbiguousImport1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAmbiguousImport2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAmbiguousImport3(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAmbiguousImport4(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testAmbiguousImport5(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMakeAllUsesAlsoStatic1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIfMakeStaticAndUsesField_OnlyChangeAccessOfField(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIfMakeStaticAndUsesMethod_LeaveAndChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIfMakeStaticAndUsesMethod_MoveAndMakeStaticAlso(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIfMakeStaticAndUsesMethod_MoveAndMakeStaticAlso2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testRightParameterName1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testRemoveParenthesesBug1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNonStaticUsedByStatic_ResolveMakeStatic1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNonStaticUsedByStatic_ResolveMove1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNonStaticUsedByStatic_ResolveMove2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromAnonymous_MoveNotPossible1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromLocalUsesForeignLocalVar_MoveNotPossible1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromLocalUsesNative_MoveNotPossible1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromLocalUsesNative_MoveNotPossible2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testCastBug1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testReuseOfParameter1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testReuseSecondOfTwoParameters(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeSubTargetDoubleResolution_ChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeSubTargetDoubleResolution_MoveNative(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeSubTargetNoConflict(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeNotSubTargetDoubleResolution_ChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeNotSubTargetDoubleResolution_MoveNative(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeNotSubTargetSingleResolution_MoveNative(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativeNotSubTargetSingleResolution_ChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNotNativeNotSubTargetSingleResolution_ChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testUsesNativePrivateConstructorSingleResolution_ChangeAccess(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testbug1977(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testmoveOverridesToSuper(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testmoveOverridesAbstract(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testmoveOverridden(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testwrongEdit(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromInterface1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveFromInterface2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveToNotAccessedClass(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDontAddParameter(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDontAddParameter2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testDontAddParameter3(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testStaticImports1(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testStaticImports2(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testStaticImports3(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveInner_ResolveToStatic(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveInner_AlsoMoveUsedBy(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveInner(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveInner_AlsoMoveUse(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIssue246(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIssue616(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIssue631(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testIssue632(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMultiDeclarationMove(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testMoveMethodThatUsesLocal_REF1120(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testRedundantImports(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
<test name="testNameDuplicating(test.xpdev.refactory.refactorings.MoveMemberTest)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.refactorings.undo.UndoManagerTest">
<test name="testRenameType(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testCreateNewFile(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testRenameTo(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testMoveTypeRefactoring(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testTransactionRepository(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testRollBack(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testCanUndoCanRedo(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testDeleteFileUndo(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
<test name="testNotSignificantCannotUndo(com.xpdev.refactory.refactorings.undo.UndoManagerTest)"/>
</testsuite>
<testsuite name="AddDelegatesTest">
<test name="testFinal(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
<test name="testPrimitive(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
<test name="testProtectedAccess(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
<test name="testProtectedAccess2(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
<test name="testProtectedAccess3(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
<test name="testIssue252(test.xpdev.refactory.refactorings.AddDelegatesTest)"/>
</testsuite>
<testsuite name="OverrideMethodsTest">
<test name="test1(test.xpdev.refactory.refactorings.OverrideMethodsTest)"/>
<test name="testImplement(test.xpdev.refactory.refactorings.OverrideMethodsTest)"/>
<test name="testInterfaceInheritance(test.xpdev.refactory.refactorings.OverrideMethodsTest)"/>
<test name="testTypeHierachyComparator(test.xpdev.refactory.refactorings.OverrideMethodsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.ChangeMethodSignatureTest">
<test name="test1(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFail1(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test18(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test19(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test20(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test21(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test22(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test23(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test24(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test25(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="test26(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailAdd2(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailAdd3(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailAdd4(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailDoAll5(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailDoAll6(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testFailDoAll7(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testRenameReorder26(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testRenameReorder27(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd28(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd29(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd30(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd31(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd32(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAdd33(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAddReorderRename34(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll35(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll36(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll37(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll38(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll39(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll40(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll41(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll42(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll43(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll44(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll45(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll46(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll47(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll48(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll49(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll50(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll51(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll52(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll53(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll54(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll55(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll56(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll57(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll58(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll59(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAll60(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testAddRecursive1(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testXXX(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testException01(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testEnum01(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testEnum02(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testEnum03(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testNpeWithHierarchy(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testDSF1(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
<test name="testDSF2(test.xpdev.refactory.refactorings.ChangeMethodSignatureTest)"/>
</testsuite>
<testsuite name="com.aqris.common.util.graph.DigraphTopologicalSorterTest">
<test name="testSingleNodeCycle(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testTwoNodesCycle(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testThreeComponents(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testCormensExample(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testAcyclicConverterTwoNodes(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testAcyclicConverterThreeNodes(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testAcyclicConverterCormensGraph(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testSortTwoNodes(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
<test name="testSortCormensGraph(com.aqris.common.util.graph.DigraphTopologicalSorterTest)"/>
</testsuite>
<testsuite name="Use Super Type Tests">
<testsuite name="com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeUnitTest">
<test name="testOverrides(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeUnitTest)"/>
</testsuite>
<testsuite name="UseSuperTypeTest">
<test name="test16(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test17(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test18(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test19(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test20(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test21(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test22(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test23(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test24(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test25(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test26(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test27(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test28(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test29(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test30(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test31(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test33(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test32(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test34(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test35(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test36(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test37(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test38(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test39(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test40(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test41(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test42(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test43(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test44(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test45(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test46(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test47(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testRenameType(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy4(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy5(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy6(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy7(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy8(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testAmbigiousResult(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testCyclicDependency1(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testCyclicDependency2(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testSyntheticConstructor(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testSyntheticConstructorFails(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testAllSubtypes(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testAllSubtypes2(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testSingleUsageNotRefrencedSuper(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testDerivedFromObject(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMultipleCatchBlocks(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testSameSignature(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testUsageFromOtherFile(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testMy11(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testArrayType1(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testArrayType2(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew0(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew1(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew2(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew3(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew4(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew5(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew6(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew7(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew8(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew9(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew10(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew11(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew12(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew13(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew14(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew15(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew16(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew17(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew18(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew19(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew20(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew21(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew22(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew23(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew24(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew25(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew26(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew27(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew28(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew29(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew30(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew31(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew32(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew33(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew34(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew35(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew36(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew37(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testNew38(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test0_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test1_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test2_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test3_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test4_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test5_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test6_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test7_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test8_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test9_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test10_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test11_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test12_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test13_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test14_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test15_(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test48(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test49(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test50(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test51(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test52(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test53(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test54(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test55(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test56(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test57(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test58(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test59(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test60(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test61(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test62(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test63(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test64(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test65(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test66(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test67(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test68(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test69(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test70(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test71(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test72(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test73(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test74(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test75(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test76(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test77(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test78(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test79(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test80(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test81(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test82(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test82java1_4(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test83(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test84(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="test85(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)">
<failure>
junit.framework.AssertionFailedError: <br/>
	at junit.framework.Assert.fail(Assert.java:47)<br/>
	at junit.framework.Assert.assertTrue(Assert.java:20)<br/>
	at com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest.assertCannotApplyRefactoring(UseSuperTypeTest.java:1039)<br/>
	at com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest.validatePassingTest(UseSuperTypeTest.java:161)<br/>
	at com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest.validatePassingTest(UseSuperTypeTest.java:168)<br/>
	at com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest.validatePassingTest(UseSuperTypeTest.java:195)<br/>
	at com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest.test85(UseSuperTypeTest.java:994)<br/>
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br/>
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)<br/>
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)<br/>
	at java.lang.reflect.Method.invoke(Method.java:324)<br/>
	at junit.framework.TestCase.runTest(TestCase.java:154)<br/>
	at junit.framework.TestCase.runBare(TestCase.java:127)<br/>
	at junit.framework.TestResult$1.protect(TestResult.java:106)<br/>
	at junit.framework.TestResult.runProtected(TestResult.java:124)<br/>
	at junit.framework.TestResult.run(TestResult.java:109)<br/>
	at junit.framework.TestCase.run(TestCase.java:118)<br/>
	at junit.framework.TestSuite.runTest(TestSuite.java:208)<br/>
	at junit.framework.TestSuite.run(TestSuite.java:203)<br/>
	at junit.framework.TestSuite.runTest(TestSuite.java:208)<br/>
	at junit.framework.TestSuite.run(TestSuite.java:203)<br/>
	at junit.framework.TestSuite.runTest(TestSuite.java:208)<br/>
	at junit.framework.TestSuite.run(TestSuite.java:203)<br/>
	at junit.framework.TestSuite.runTest(TestSuite.java:208)<br/>
	at junit.framework.TestSuite.run(TestSuite.java:203)<br/>
	at junit.extensions.TestDecorator.basicRun(TestDecorator.java:22)<br/>
	at junit.extensions.TestSetup$1.protect(TestSetup.java:19)<br/>
	at junit.framework.TestResult.runProtected(TestResult.java:124)<br/>
	at junit.extensions.TestSetup.run(TestSetup.java:23)<br/>
	at test.xpdev.refactory.MainTestSetup.run(TestSuiteComposer.java:118)<br/>
	at junit.textui.TestRunner.doRun(TestRunner.java:116)<br/>
	at junit.textui.TestRunner.start(TestRunner.java:172)<br/>
	at junit.textui.TestRunner.main(TestRunner.java:138)<br/>

</failure>
</test>
<test name="testIssue243(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testGenerics1(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
<test name="testGenerics2(com.xpdev.refactory.refactorings.usesupertype.UseSuperTypeTest)"/>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.SnapshotBuilderTest">
<test name="testSubpackages(test.xpdev.refactory.refactorings.SnapshotBuilderTest)"/>
<test name="testOnePackage(test.xpdev.refactory.refactorings.SnapshotBuilderTest)"/>
<test name="testWholeProject(test.xpdev.refactory.refactorings.SnapshotBuilderTest)"/>
<test name="testMultipleTargets(test.xpdev.refactory.refactorings.SnapshotBuilderTest)"/>
<test name="testProgressMonitorProgress(test.xpdev.refactory.refactorings.SnapshotBuilderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.EjbUtilTest">
<test name="testIsEntityBean(test.xpdev.refactory.refactorings.EjbUtilTest)"/>
<test name="testRemoteClass(test.xpdev.refactory.refactorings.EjbUtilTest)"/>
<test name="testLocalClass(test.xpdev.refactory.refactorings.EjbUtilTest)"/>
</testsuite>
<testsuite name="FactoryMethod tests">
<test name="testBug1866(test.xpdev.refactory.refactorings.FactoryMethodTest)"/>
<test name="testUsedInAnonymous(test.xpdev.refactory.refactorings.FactoryMethodTest)"/>
<test name="testBug1877(test.xpdev.refactory.refactorings.FactoryMethodTest)"/>
</testsuite>
<testsuite name="CleanImports tests">
<test name="testCleanImports1(test.xpdev.refactory.refactorings.CleanImportsTest)"/>
</testsuite>
<testsuite name="CreateMissingMethod tests">
<test name="testAddingImportOfArrayType(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testNullParameter(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testNoParameters(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testAnonymousClassParameter(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testInterfaceMethod(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testGuessReturnTypeInReturnStatement(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
<test name="testGuessReturnTypeUsingClassCastExpression(test.xpdev.refactory.refactorings.CreateMissingMethodTest)"/>
</testsuite>
<testsuite name="CallTree tests">
<test name="testBug2060(test.xpdev.refactory.refactorings.CallTreeTest)"/>
</testsuite>
<testsuite name="null">
<testsuite name="test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest">
<test name="test1(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testArray(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testNew(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test18(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test19(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test20(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test21(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test22(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test23(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test24(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test25(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test3_division(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test3_parentheses(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test14_j(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test14_j_middle(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test14_complexArray(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test14_complexArray2(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test16_usertypecasts(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test22_simpletemp(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="test25_valuabletempcomment(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testListLength(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testFor(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testArrayComplex(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testFieldSimple(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testFieldComplex(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testFieldInner(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testSimpleMethodCall(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testSimpleMethodCall_complexInnards(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testAdditionToMethodCall(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testComplexTypes(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testMultilineDeclaration(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testMultilineDeclaration_2(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testManySpaces(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testArrayAccess(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testInvocationOnTypecast(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testResolveNames(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testManyParentheses(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testArrayReturnedFromMethod(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testLazyInitialization(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
<test name="testLazyFieldInitialization(test.xpdev.refactory.refactorings.inlinevariable.CanInlineTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest">
<test name="testFail3(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail8(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail13(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFail14(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testArrayConst(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFieldAssignment(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testQualifiedFieldUsage(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testFieldAccessedInMultipleFiles(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
<test name="testExceptions(test.xpdev.refactory.refactorings.inlinevariable.CannotInlineTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest">
<test name="test1(test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest)"/>
<test name="testHierarchy(test.xpdev.refactory.refactorings.inlinevariable.InlineGenericsTest)"/>
</testsuite>
</testsuite>
<testsuite name="null">
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.VariableModifiersTest">
<test name="testVarTypeNodeEnd(test.xpdev.refactory.refactorings.promotetemptofield.VariableModifiersTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest">
<test name="testBefore(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testRegularErase(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testLaterVariableInMultivarDeclaration(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testArrayType(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testNoAstsPointAtBracketEnd(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFindingSimpleBracket(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFindingDoubleBracket(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFindingDoubleBracket_typeNodeHasAlsoAnArrayModifier(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testCountBracketsAfterVarName(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFindingNextClosingBracket(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testHasBracketsAfterName(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFindBracketsEndAfterName(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testArrayDeclarationOnTypeNode(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testArrayDeclarationOnTypeNode_noSpace(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testMultiVariableDeclaration_variableNotFirstOne(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testArrayDeclarationAfterVariableName(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testArrayDeclarationAfterVariableName_moreSpace(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
<test name="testFinalModifier(test.xpdev.refactory.refactorings.promotetemptofield.BracketFinderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.RenameLocalTest">
<test name="testNormalParameterIndexerOperation(test.xpdev.refactory.refactorings.promotetemptofield.RenameLocalTest)"/>
<test name="testSkippingDeclarations(test.xpdev.refactory.refactorings.promotetemptofield.RenameLocalTest)"/>
<test name="testRenameLocalWithoutRenamingDeclaration(test.xpdev.refactory.refactorings.promotetemptofield.RenameLocalTest)"/>
<test name="testNoConfirmationWindowPopsUp(test.xpdev.refactory.refactorings.promotetemptofield.RenameLocalTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest">
<test name="testInitialSetName(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testFinalModifierEnabledAtFirst(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testFinalModifierNotCheckedAtFirst(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testAddInitializeLocation(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testInitialEnablementOfAMethod(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testSelection(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testChangingInitMethods(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testCreationOfRefactoringInstance(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testCreationOfRefactoringInstanceInUserInput(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testNoFinalFlagOnRefactoringInstance(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testFinalFlagOnRefactoringInstance(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testFinalSelectedButNotAllowedOnRefactoringInstance(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testOkPressed(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testOkButtonDisabling(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testSettingAccessModifiers(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
<test name="testRememberingInitMethod(test.xpdev.refactory.refactorings.promotetemptofield.UserInputTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest">
<test name="testNoUsedLocalClasses(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesLocalClass_constructorInvocation(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesLocalClass_className(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesLocalClass_declaration(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesLocalClass_typecast(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesNonLocalClass(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesLocalClass_finalMethod(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesNoLocalClasses_finalMethod(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
<test name="testUsesNoLocalClasses_finalMethod_2(test.xpdev.refactory.refactorings.promotetemptofield.LocalClassUsageTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest">
<test name="testWhichFieldNamesShadeExistingFields(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testInnerClassShadesOuterClassField(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testOuterClassShadesInnerClassVairable(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCanCreateFieldThatDoesNotExist(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldThatAlreadyExists(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldThatExistsInSupertypeAndIsUsed(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldThatExistsInSuperSupertypeAndIsUsed(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCanCreateFieldThatExistsInSupertypeAndIsNotUsed(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldThatExistsInSupertypeAndIsUseds(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldThatExistsInOuterTypeAndIsUsedWithinInner(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testGetFieldInvocations(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testFieldInvocationIsNotOnOwnerField(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testFieldInvocationIsOnOwnerField(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testGetVariableInvocations(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testVariableIsOnParentOfType(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testVariableIsNotOnParentOfType(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldIfItShadowsOuterTypeVariableUsage(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCannotCreateFieldIfItShadowsOuterTypeVariableUsageInSubclassOfLocal(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCanCreateFieldIfItShadowsOuterTypeVariableUsageButHasDifferentName(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
<test name="testCanCreateFieldIfItShadowsOuterTypeVariableUsageInSubclassOfLocalButHasDifferentName(test.xpdev.refactory.refactorings.promotetemptofield.AllowedFieldNamesTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest">
<test name="test1(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test0NoValue(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test0NoValueInitInField(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test0NoValueInitInConstructor(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test9_field(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test13NoAssignment(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test14NoValueOnLeft(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test14NoAssignment(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test15InitInField(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test15InitInConstructor(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="test15Fqn(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testFqn(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testFqnMethod(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testFqnConstructor(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testIndentInInnerBlock(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testTempUsageWithMethodInit(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testOuterTempUsage(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testTwoFieldLocations(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testShadingOfNotUsedField(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testThisPrefixInConstructor(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testTempInConstructor_constructor(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testTempInConstructor_field(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testTempInConstructor_method(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testRename(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testRenameWithUsages(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testRenameWithInitInMethod(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testMethodInitWithLocalUsages(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testFinalTempWithMethodInit(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testArraysInitedInMethod(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testArraysInitedInMethod2(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testArraysInitedInMethod2MultivarDeclaration(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testMultivarWithFinalModifier(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testAutomaticStaticModifier(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testManualStaticModifier(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testLongVarName(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testNoWhitespace(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testGuardedBlocks(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testInitializeInMethodRim679_1(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
<test name="testInitializeInMethodRim679_2(test.xpdev.refactory.refactorings.promotetemptofield.CanPromoteTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest">
<test name="testFail1(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail3(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail2InitInField(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail2InitInConstructor(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail5Supertype(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
<test name="testFail7ExtendedFor(test.xpdev.refactory.refactorings.promotetemptofield.CannotPromoteTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest">
<test name="testEnablement0(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
<test name="testEnablement3(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
<test name="testEnablement5(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
<test name="testEnablement6(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
<test name="testEnablement7(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
<test name="testEnablement8(test.xpdev.refactory.refactorings.promotetemptofield.AllowedModifiersTest)"/>
</testsuite>
</testsuite>
<testsuite name="Introduce Temp tests">
<testsuite name="test.xpdev.refactory.refactorings.introducetemp.CustomTest">
<test name="testbug2148(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testIssue236(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testIssue421(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testRetTypeCondExpr1(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testRetTypeCondExpr2(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testRetTypeCondExpr3(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testRetTypeCondExpr4(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
<test name="testRetTypeCondExpr5(test.xpdev.refactory.refactorings.introducetemp.CustomTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest">
<test name="test1(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test0(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test2(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test3(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test4(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test5(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test6(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test8(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test9(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test7(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test10(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test11(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test12(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test13(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test14(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test15(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test16(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test17(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test18(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test19(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test21(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test23(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test25(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test26(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test27(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test28(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test29(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test30(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test31(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test33(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test32(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test34(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test35(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test36(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test37(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test38(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test39(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test40(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test41(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test42(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test43(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test44(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test45(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test46(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test47(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test48(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test49(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test50(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test51(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test52(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test53(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test54(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test55(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test56(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test57(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test58(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test59(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test60(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test61(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test62(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test63(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test64(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test65(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test66(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test67(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test68(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test69(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test70(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test71(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test72(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test73(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test74(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test75(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test76(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test77(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test78(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test79(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test80(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="test81(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
<test name="testZeroLengthSelection0(test.xpdev.refactory.refactorings.introducetemp.CanIntroduceTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest">
<test name="testFail1(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail2(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail3(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail4(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail5(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail0(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail6(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail7(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail9(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail10(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail11(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail18(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail19(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail20(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail21(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail22(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail23(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail24(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail25(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail26(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail30(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail31(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail33(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail34(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail29(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFail32(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFailIssue310(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
<test name="testFailIssue310b(test.xpdev.refactory.refactorings.introducetemp.CannotIntroduceTest)"/>
</testsuite>
</testsuite>
<testsuite name="Non java files">
<testsuite name="Rename Qualified class names in non-java files">
<test name="testSimple(test.xpdev.refactory.refactorings.nonjava.RenameClassTest)"/>
</testsuite>
<testsuite name="Find package name occurrences in non-java files">
<test name="testSimple(test.xpdev.refactory.refactorings.nonjava.WhereUsedPackageTest)"/>
</testsuite>
<testsuite name="Change qualified class names in non-java files with Move Class">
<test name="testSimple(test.xpdev.refactory.refactorings.nonjava.RenameClassTest)"/>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest">
<test name="testRecursion(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testFieldInitializer(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalInitializer(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testInterruptedStatement(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testMultiLocal(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testComplexBody(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testCompileError1(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testCompileError2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testCompileError3(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testBasic1(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testBasic2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testEmptyBody(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testPrimitiveArray(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testTypeArray(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testInitializer(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSuper(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testIssue285(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUnusedReturn(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testRecursive(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testRecursive2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testRecursive3(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testPrimitiveParam(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testIncDec(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testFieldReference(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferenceUnused(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferenceRead(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferenceRead2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferenceWrite(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferenceLoop(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalReferencePrefix(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLiteralReferenceRead(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLiteralReferenceWrite(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUsed1(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUsed2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUsed3(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUsed4(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUnused1(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUnused2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParameterNameUnused3(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOneRead(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testTwoReads(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testWrite(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSameLocal(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSameType(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSameTypeAfter(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSameTypeInSibling(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testLocalInType(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testFieldInType(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSwitchStatement(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testBlocks(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testExpressionStatement(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testExpressionStatementWithReturn(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testStatementWithFunction1(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testStatementWithFunction2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testParenthesis(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSimpleExpression(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSimpleExpressionWithStatements(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testSimpleBody(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testAssignment(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testReturnStatement(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testContainOnlyComments(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testCommentIsLastStatement(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testForEmpty(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testForOne(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testForTwo(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testIfThenTwo(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testIfElseTwo(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testForAssignmentOne(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testForAssignmentTwo(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNoImplicitReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNameThisReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNameImplicitReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testExpressionZeroImplicitReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testExpressionOneImplicitReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testExpressionTwoImplicitReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testStaticReceiver(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testReceiverWithStatic(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testThisExpression(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseArray(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInArgument(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInClassLiteral(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInDecl(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInDecl2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInDecl3(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInDeclClash(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testUseInLocalClass(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNotOverloaded(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOverloadedPrimitives(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNotCastableOverloaded(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOverloaded(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testHierarchyOverloadedPrimitives(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testHierarchyOverloaded(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testHierarchyOverloadedPrivate(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testReceiverCast(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNoCast(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testDeepReturns(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testDeepReturns2(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testNoCast(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOneObjectArg(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOneObjectArray0ElementArg(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOneObjectArray1ElementArg(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testOneObjectArray3ElementsArg(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testIssue1352(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
<test name="testBroadedAccess(test.xpdev.refactory.refactorings.inlinemethod.InlineMethodTest)"/>
</testsuite>
<testsuite name="WhereCaughtTest">
<test name="testBug2213(test.xpdev.refactory.refactorings.WhereCaughtTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.CleanRebuildDialogTest">
<test name="testDialogShownOnClean(test.xpdev.refactory.refactorings.CleanRebuildDialogTest)"/>
<test name="testDialogShownOnRebuild(test.xpdev.refactory.refactorings.CleanRebuildDialogTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.refactorings.ImportUtilsTest">
<test name="TestSimpleAmbiguousImport(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestImportNotAmbiguous(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousSameNameInTargetPackage(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousSameNameInnerInTargetPackageNotImported(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousSameNameInnerInTargetPackageImportsDirectly(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousSameNameInnerInTargetPackageStaticImport(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousAlreadyStaticImported(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousAlreadyImportedDirectly(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousAlreadyImportedOnDemand(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousAlreadyImportedViaSingleStaticImport(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
<test name="TestAmbiguousAlreadyImportedViaStaticImportOnDemand(test.xpdev.refactory.refactorings.ImportUtilsTest)"/>
</testsuite>
</testsuite>
<testsuite name="null">
<testsuite name="test.xpdev.refactory.netbeansstandalone.IdeVersionTest">
<test name="testParsing(test.xpdev.refactory.netbeansstandalone.IdeVersionTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.netbeansstandalone.ErrorManagerTest">
<test name="testLogFileLocationInErrorDialog(test.xpdev.refactory.netbeansstandalone.ErrorManagerTest)"/>
<test name="testExceptionWhenTryingToShowDialog(test.xpdev.refactory.netbeansstandalone.ErrorManagerTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest">
<test name="testFirst(test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest)"/>
<test name="testGettingAndSettingAttributes(test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest)"/>
<test name="testPersistance(test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest)"/>
<test name="testGetSnapshot(test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest)"/>
<test name="testOptionsFileDeleted(test.xpdev.refactory.netbeansstandalone.FileBasedOptionsTest)"/>
</testsuite>
</testsuite>
<testsuite name="Source package tests">
<testsuite name="test.xpdev.refactory.source.SourceUtilTest">
<test name="testMethod(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testNull(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testPackage(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testParameter(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testField(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testCIType(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testClassStaticField(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testLocalVariable(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testParameters(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testUndetectable(test.xpdev.refactory.source.SourceUtilTest)"/>
<test name="testConstructor(test.xpdev.refactory.source.SourceUtilTest)"/>
</testsuite>
<testsuite name="Source.Format package tests">
<testsuite name="test.xpdev.refactory.source.format.BinItemFormatterTest">
<test name="test_BinReturnStatementFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinReturnStatementFormatterWithLiteralExpression(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinReturnStatementFormatterWithLiteralExpression2(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinIncDecExpressionFormatterWithINC(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinIncDecExpressionFormatterWithPOST_INC(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinIncDecExpressionFormatterWithDEC(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinIncDecExpressionFormatterWithPOST_DEC(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinArithmeticalExpression(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinVariableUseExpressionFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinEmptyExpressionFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinUnaryExpressionFormatterWithUNARY_PLUS(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinUnaryExpressionFormatterWithUNARY_MINUS(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinUnaryExpressionFormatterWithLNOT(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinUnaryExpressionFormatterWithBNOT(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_LocalVariableFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinMethodFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinStatementListFormatter(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
<test name="test_BinArrayInitExpressionPrinting(test.xpdev.refactory.source.format.BinItemFormatterTest)"/>
</testsuite>
</testsuite>
<testsuite name="com.xpdev.refactory.source.html.CrossReferencedHTMLTest">
<test name="testcrossReferencedHTML1(com.xpdev.refactory.source.html.CrossReferencedHTMLTest)"/>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.LinePositionUtilTest">
<test name="testOneLine(test.xpdev.refactory.LinePositionUtilTest)"/>
<test name="testUnixNewline(test.xpdev.refactory.LinePositionUtilTest)"/>
<test name="testMacNewline(test.xpdev.refactory.LinePositionUtilTest)"/>
<test name="testWindowsNewline(test.xpdev.refactory.LinePositionUtilTest)"/>
<test name="testTab(test.xpdev.refactory.LinePositionUtilTest)"/>
<test name="testExtractLine(test.xpdev.refactory.LinePositionUtilTest)"/>
</testsuite>
<testsuite name="source.edit package tests">
<testsuite name="CompoundASTImpl tests">
<test name="testGetText(com.xpdev.refactory.source.edit.CompoundASTImpl$TestDriver)"/>
<test name="testGetOneLineNodeCoordinates(com.xpdev.refactory.source.edit.CompoundASTImpl$TestDriver)"/>
<test name="testMultiLineNodeCoordinates(com.xpdev.refactory.source.edit.CompoundASTImpl$TestDriver)"/>
<test name="testQualifiedExtend(com.xpdev.refactory.source.edit.CompoundASTImpl$TestDriver)"/>
<test name="testMethodInvocatioin(com.xpdev.refactory.source.edit.CompoundASTImpl$TestDriver)"/>
</testsuite>
<testsuite name="LineReader tests">
<test name="testGenericReadLine(com.xpdev.refactory.source.edit.LineReader$TestDriver)"/>
</testsuite>
<testsuite name="MoveEditor tests">
<test name="testWholeLineMove(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testBeginningMove(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testEndingMove(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testMiddleMove(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testEndingIndentShift(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testBeginningIndentShift(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testBeginningIndentShift2(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testMoveMultiplyLines(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testMoveSingleIndentedLine(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
<test name="testMoveMultiplyLines2(com.xpdev.refactory.source.edit.MoveEditor$TestDriver)"/>
</testsuite>
<testsuite name="Line tests">
<test name="testReplaceDelete(com.xpdev.refactory.source.edit.Line$TestDriver)"/>
<test name="testInsertDelete(com.xpdev.refactory.source.edit.Line$TestDriver)"/>
<test name="testRequestOfDeleted(com.xpdev.refactory.source.edit.Line$TestDriver)"/>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.BinItemReferenceTest">
<test name="testParameterizedMethods(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testPackage(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testArray(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testWholeProject(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testList(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testCompilationUnit(test.xpdev.refactory.BinItemReferenceTest)"/>
<test name="testAllReferables(test.xpdev.refactory.BinItemReferenceTest)"/>
<testsuite name="test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource">
<test name="testPackage(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
<test name="testArray(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
<test name="testWholeProject(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
<test name="testList(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
<test name="testCompilationUnit(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
<test name="testAllReferables(test.xpdev.refactory.BinItemReferenceTestOnRefactorItSource)"/>
</testsuite>
</testsuite>
<testsuite name="RwRefactoringTestUtils tests">
<test name="testMutableSingleCompilationUnit(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
<test name="testMutableDirectory(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
<test name="testAssertSameSourcesSingleModifiedFile(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
<test name="testAssertSameSourcesModifiedFilesInSubdirectories(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
<test name="testAssertSameSourcesMissingDirectory(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
<test name="testAssertSameSourcesMissingFile(test.xpdev.refactory.RwRefactoringTestUtils$TestDriver)"/>
</testsuite>
<testsuite name="PackageSelector tests">
<test name="testPackageModelInit(com.xpdev.refactory.ui.PackageModel$TestDriver)"/>
</testsuite>
<testsuite name="JspServletSourceMap tests">
<test name="testExpressions(com.xpdev.refactory.jsp.TestDriver)"/>
<test name="testImports(com.xpdev.refactory.jsp.TestDriver)"/>
<test name="testExtends(com.xpdev.refactory.jsp.TestDriver)"/>
<test name="testDeclaration(com.xpdev.refactory.jsp.TestDriver)"/>
<test name="testScriptlet(com.xpdev.refactory.jsp.TestDriver)"/>
<test name="testUseBean(com.xpdev.refactory.jsp.TestDriver)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.FileUtilTest">
<test name="testGetCommonPath(test.xpdev.refactory.FileUtilTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.commonIDE.AllTests">
<testsuite name="com.xpdev.refactory.commonIDE.CacheTest">
<test name="testEnsureProject(com.xpdev.refactory.commonIDE.CacheTest)"/>
<test name="testSerializeCache(com.xpdev.refactory.commonIDE.CacheTest)"/>
<test name="testSetActiveProject(com.xpdev.refactory.commonIDE.CacheTest)"/>
</testsuite>
<testsuite name="com.xpdev.refactory.commonIDE.WorkspaceTest">
<test name="testXXX(com.xpdev.refactory.commonIDE.WorkspaceTest)"/>
<test name="testRequiredProjectSolving(com.xpdev.refactory.commonIDE.WorkspaceTest)"/>
<test name="testAddOneProject(com.xpdev.refactory.commonIDE.WorkspaceTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.commonIDE.ItemByCoordinateFinderTest">
<test name="testAnonymousClass(test.xpdev.refactory.commonIDE.ItemByCoordinateFinderTest)"/>
</testsuite>
</testsuite>
<testsuite name="CLI tests">
<testsuite name="test.xpdev.refactory.cli.NotUsedSupportTest">
<test name="testInvokingNotUsed(test.xpdev.refactory.cli.NotUsedSupportTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.MetricsSupportTest">
<test name="testCliActions(test.xpdev.refactory.cli.MetricsSupportTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.AuditModelBuilderTest">
<test name="testProfilesExist(test.xpdev.refactory.cli.AuditModelBuilderTest)"/>
<test name="testNoResultsWithNothingProfile(test.xpdev.refactory.cli.AuditModelBuilderTest)"/>
<test name="testAResultWithStaticizableProfile(test.xpdev.refactory.cli.AuditModelBuilderTest)"/>
<test name="testProfileParameter(test.xpdev.refactory.cli.AuditModelBuilderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.MetricsModelBuilderTest">
<test name="testNothing(test.xpdev.refactory.cli.MetricsModelBuilderTest)"/>
<test name="testProfilesExist(test.xpdev.refactory.cli.MetricsModelBuilderTest)"/>
<test name="testVisibleCoumnsCount_allVisible(test.xpdev.refactory.cli.MetricsModelBuilderTest)"/>
<test name="testVisibleCoumnsCount_allInvisible(test.xpdev.refactory.cli.MetricsModelBuilderTest)"/>
<test name="testLoc(test.xpdev.refactory.cli.MetricsModelBuilderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.actions.RunnerTest">
<test name="testHtmlFormatWithMetrics(test.xpdev.refactory.cli.actions.RunnerTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.ArgumentsParserTest">
<test name="testExistenceOfParameter(test.xpdev.refactory.cli.ArgumentsParserTest)"/>
<test name="testPathParameter(test.xpdev.refactory.cli.ArgumentsParserTest)"/>
<test name="testStringConstructor(test.xpdev.refactory.cli.ArgumentsParserTest)"/>
<test name="testUnknownTag(test.xpdev.refactory.cli.ArgumentsParserTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.ArgumentsTest">
<test name="testGetSourcepath(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testGetClasspath(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testGetLicenseFile(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testNonexistingParameter(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testRequestedAction(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testGetFormat(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testFormat(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testWarnings_missingParameters(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testWarnings_emptyParameters(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testSourcepathAndClasspathArePathParameters(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testGetFormatInstance(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testNonsupportedFormat(test.xpdev.refactory.cli.ArgumentsTest)"/>
<test name="testAuditAction(test.xpdev.refactory.cli.ArgumentsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.ProjectBuilderTest">
<test name="testDefaultClasspath(test.xpdev.refactory.cli.ProjectBuilderTest)"/>
<test name="testProjectBuilderUsesDefaultClasspath(test.xpdev.refactory.cli.ProjectBuilderTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.MainTest">
<test name="testParsingError(test.xpdev.refactory.cli.MainTest)"/>
<test name="testNonexistingPaths(test.xpdev.refactory.cli.MainTest)"/>
<test name="testJustNoguiSwitch(test.xpdev.refactory.cli.MainTest)"/>
<test name="testBadLicenseIsSpecified(test.xpdev.refactory.cli.MainTest)"/>
<test name="testMetricsWithBadFormat(test.xpdev.refactory.cli.MainTest)"/>
<test name="testNotUsedWithBadFormat(test.xpdev.refactory.cli.MainTest)"/>
<test name="testCorruptedProfile(test.xpdev.refactory.cli.MainTest)"/>
<test name="testMissingAction(test.xpdev.refactory.cli.MainTest)"/>
<test name="testWarningAboutExtraProfileSwitch(test.xpdev.refactory.cli.MainTest)"/>
<test name="testHelpPage(test.xpdev.refactory.cli.MainTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.CliTest">
<test name="testChangingLicense(test.xpdev.refactory.cli.CliTest)"/>
<test name="testProjectIsLoadedViaNewlySetLicense(test.xpdev.refactory.cli.CliTest)"/>
<test name="testNonexistingLicenseFile(test.xpdev.refactory.cli.CliTest)"/>
<test name="testCorruptedLicenseFile(test.xpdev.refactory.cli.CliTest)"/>
<test name="testUnknownParameter(test.xpdev.refactory.cli.CliTest)"/>
<test name="testProfileIsValid(test.xpdev.refactory.cli.CliTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.ArgumentsValidatorTest">
<test name="testCheckProfileMethod_invalidProfile(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckProfileMethod_missingProfile(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testEmptyNameProfileIsValid(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckActionPresent(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckProfileSupport_yes(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckProfileSupport_yes2(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckProfileSupport_no(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
<test name="testCheckProfileSupport_noProfileArgument(test.xpdev.refactory.cli.ArgumentsValidatorTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.cli.CommaSeparatedTableFormatTest">
<test name="testSimpleEscape(test.xpdev.refactory.cli.CommaSeparatedTableFormatTest)"/>
<test name="testComma(test.xpdev.refactory.cli.CommaSeparatedTableFormatTest)"/>
<test name="testQuotesInside(test.xpdev.refactory.cli.CommaSeparatedTableFormatTest)"/>
<test name="testQuotesWithoutDelimiters(test.xpdev.refactory.cli.CommaSeparatedTableFormatTest)"/>
</testsuite>
</testsuite>
<testsuite name="updater tests">
<testsuite name="test.xpdev.refactory.updater.retreiver.ConnectionFailureTest">
<test name="testInternalError(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testMissingHost(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testBadPort(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testBadUrl(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testBadFilename(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testInvalidXml(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testReadErrorInTheMiddle(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testExceptionWhileRetrievingUpdatePackage(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testMalformedUpdatePackageUrl(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testNoRouteToHost(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testProtocolException(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testUnknownServiceException(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testPortUnreachableException(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testSocketTimeout(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testPlainSocketException(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
<test name="testZipError(test.xpdev.refactory.updater.retreiver.ConnectionFailureTest)"/>
</testsuite>
</testsuite>
<testsuite name="test.xpdev.refactory.vfs.LocalSourceTest">
<test name="test_sourceContentString(test.xpdev.refactory.vfs.LocalSourceTest)"/>
<test name="test_sourceContentOfLine(test.xpdev.refactory.vfs.LocalSourceTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.vfs.SourceTest">
<test name="testCreateNewFile(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testRename(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testMkdir(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testMkdirs(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testDelete(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testDeleteNotEmptyDir(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testEmptyDirRecursively(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testOuputStream(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testLastModified(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testRelativePath(test.xpdev.refactory.vfs.SourceTest)"/>
<test name="testEmptyFileGetInputStream(test.xpdev.refactory.vfs.SourceTest)"/>
</testsuite>
<testsuite name="Transformations">
<testsuite name="Rename Transformation Tests">
<test name="test_renameBinItemByAST(test.xpdev.refactory.transformations.RenameTransformationTest)"/>
<test name="test_renameBinItem(test.xpdev.refactory.transformations.RenameTransformationTest)"/>
</testsuite>
<testsuite name="Transformation List tests">
<test name="testClearTransformationList(test.xpdev.refactory.transformations.TransformationListTest)"/>
<test name="testAddOneEditor(test.xpdev.refactory.transformations.TransformationListTest)"/>
<test name="testAddSimularEditors(test.xpdev.refactory.transformations.TransformationListTest)"/>
<test name="testAddEditorSequence(test.xpdev.refactory.transformations.TransformationListTest)"/>
<test name="testMerge(test.xpdev.refactory.transformations.TransformationListTest)"/>
<test name="testListStatus(test.xpdev.refactory.transformations.TransformationListTest)"/>
</testsuite>
<testsuite name="Transformation Manager tests">
<test name="testAddTransformationList(test.xpdev.refactory.transformations.TransformationManagerTest)"/>
<test name="testAddManyTransformationList(test.xpdev.refactory.transformations.TransformationManagerTest)"/>
</testsuite>
<testsuite name="ProjectView Tests">
<test name="testTransactionNotStarted(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testSeveralTransactions(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testNoCurrentTransaction(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testIndexingWhenKillingTransaction(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testDisablingTransaction(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testNotifiedAboutViewUpdate(test.xpdev.refactory.transformations.ProjectViewTest)"/>
<test name="testTriadsHandling(test.xpdev.refactory.transformations.ProjectViewTest)"/>
</testsuite>
<testsuite name="ProjectViewQuery Tests">
<test name="test01(test.xpdev.refactory.transformations.ProjectViewQueryTest)"/>
<test name="test02(test.xpdev.refactory.transformations.ProjectViewQueryTest)"/>
<test name="test03(test.xpdev.refactory.transformations.ProjectViewQueryTest)"/>
<test name="test00(test.xpdev.refactory.transformations.ProjectViewQueryTest)"/>
</testsuite>
</testsuite>
<testsuite name="Settings package tests">
<testsuite name="test.xpdev.refactory.settings.CodeStyleTests">
<test name="test_loadDefaultCodeStyle(test.xpdev.refactory.settings.CodeStyleTests)"/>
</testsuite>
</testsuite>
<testsuite name="null">
<testsuite name="null">
<testsuite name="com.aqris.common.util.cvsutil.CvsEntriesLineTest">
<test name="testSimpleParse(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
<test name="testMissingTokens(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
<test name="testDirectory(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
<test name="testFileRemoval(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
<test name="testUncommitedAdd(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
<test name="testBinary(com.aqris.common.util.cvsutil.CvsEntriesLineTest)"/>
</testsuite>
</testsuite>
<testsuite name="com.aqris.common.util.PhraseSplitterTest">
<test name="testWordDetection1(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection2(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection3(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection4(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection5(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection6(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection7(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection8(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection9(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection10(com.aqris.common.util.PhraseSplitterTest)"/>
<test name="testWordDetection11(com.aqris.common.util.PhraseSplitterTest)"/>
</testsuite>
<testsuite name="com.aqris.common.util.WordUtilsTest">
<test name="testWordStartsWithCapitalLetter1(com.aqris.common.util.WordUtilsTest)"/>
<test name="testWordStartsWithCapitalLetter2(com.aqris.common.util.WordUtilsTest)"/>
<test name="testAllLettersAreCapital1(com.aqris.common.util.WordUtilsTest)"/>
<test name="testAllLettersAreCapital2(com.aqris.common.util.WordUtilsTest)"/>
<test name="testStartsWithLowecaseLetter1(com.aqris.common.util.WordUtilsTest)"/>
<test name="testStartsWithLowecaseLetter2(com.aqris.common.util.WordUtilsTest)"/>
<test name="testMeaninglessString(com.aqris.common.util.WordUtilsTest)"/>
<test name="testNumericString(com.aqris.common.util.WordUtilsTest)"/>
<test name="testNextWordPosition(com.aqris.common.util.WordUtilsTest)"/>
<test name="testPreviousWordPosition(com.aqris.common.util.WordUtilsTest)"/>
</testsuite>
<testsuite name="test.xpdev.refactory.utils.StringUtilTest">
<test name="testSerializeEmptyList(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSerializeOneItem(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSerializeTwoItems(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSerializeItemsThatContainSeparator(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testLineHasOnlyWhitespaceAndComments(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testUppercaseStyleName(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase1(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase2(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase3(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase4(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase5(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase6(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase7(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase8(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testIndexesOfSubPhrase9(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace1(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace2(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace3(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace4(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace5(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace6(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace7(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace8(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartWordReplace9(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace1(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace2(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace3(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace4(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace5(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace6(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace7(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace8(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testSmartPhraseReplace9(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace0(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace1(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace2(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace3(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace4(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace5(test.xpdev.refactory.utils.StringUtilTest)"/>
<test name="testReplaceCommentsWithWhitespace6(test.xpdev.refactory.utils.StringUtilTest)"/>
</testsuite>
<testsuite name="com.aqris.common.util.AttempterTest">
<test name="testSucceessOnFirstAttempt(com.aqris.common.util.AttempterTest)"/>
<test name="testSucceessOnSecondAttempt(com.aqris.common.util.AttempterTest)"/>
<test name="testTimeout(com.aqris.common.util.AttempterTest)"/>
<test name="testImmediateTimeout(com.aqris.common.util.AttempterTest)"/>
<test name="testTimerStart(com.aqris.common.util.AttempterTest)"/>
<test name="testInterval_successOnFirstAttempt(com.aqris.common.util.AttempterTest)"/>
<test name="testInterval_successOnSecondAttempt(com.aqris.common.util.AttempterTest)"/>
<test name="testInterval_timeout(com.aqris.common.util.AttempterTest)"/>
<test name="testRegularUsage(com.aqris.common.util.AttempterTest)"/>
</testsuite>
<testsuite name="Graph">
<testsuite name="Dependecies Graph Test">
<test name="testMatrixResize(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance1(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance2(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance3(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance4(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance5(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance6(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDistance7(com.aqris.common.util.graph.WeightedGraphTest)"/>
<test name="testDependencyEntries(com.aqris.common.util.graph.WeightedGraphTest)"/>
</testsuite>
</testsuite>
</testsuite>
<testsuite name="Report Generation tests">
<testsuite name="test.xpdev.refactory.reports.XMLReportGenerationTest">
<test name="testNotUsedXMLFile(test.xpdev.refactory.reports.XMLReportGenerationTest)"/>
<test name="testMetricsXMLFile(test.xpdev.refactory.reports.XMLReportGenerationTest)"/>
<test name="testAuditsXMLFile(test.xpdev.refactory.reports.XMLReportGenerationTest)"/>
</testsuite>
</testsuite>
</testsuite>
